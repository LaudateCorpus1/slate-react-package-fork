{"version":3,"file":"slate-react.js","sources":["../src/constants/event-handlers.js","../src/constants/other-handlers.js","../src/constants/data-attributes.js","../src/constants/selectors.js","../src/utils/offset-key.js","../src/components/leaf.js","../src/components/text.js","../src/components/inline.js","../src/components/block.js","../src/components/document.js","../src/utils/scroll-to-selection.js","../src/utils/remove-all-ranges.js","../src/components/content.js","../src/plugins/react/editor-props.js","../src/plugins/react/rendering.js","../src/utils/safely-get-parent-key-node.js","../src/utils/sanitize-dom-on-error.js","../src/plugins/react/commands.js","../src/plugins/react/queries.js","../src/constants/transfer-types.js","../src/utils/clone-fragment.js","../src/utils/get-event-transfer.js","../src/utils/set-event-transfer.js","../src/plugins/dom/after.js","../src/utils/find-dom-node.js","../src/plugins/dom/before.js","../src/plugins/dom/index.js","../src/plugins/react/restore-dom.js","../src/plugins/debug/stringify-event.js","../src/plugins/debug/debug-events.js","../src/plugins/debug/debug-batch-events.js","../src/plugins/debug/debug-mutations.js","../src/plugins/react/index.js","../src/components/editor.js","../src/utils/find-dom-point.js","../src/utils/find-dom-range.js","../src/utils/find-node.js","../src/utils/find-path.js","../src/utils/find-point.js","../src/utils/find-range.js","../src/utils/get-event-range.js","../src/index.js"],"sourcesContent":["/**\n * Event handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst EVENT_HANDLERS = [\n  'onBeforeInput',\n  'onBlur',\n  'onClick',\n  'onContextMenu',\n  'onCompositionEnd',\n  'onCompositionUpdate',\n  'onCompositionStart',\n  'onCopy',\n  'onCut',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onInput',\n  'onFocus',\n  'onKeyDown',\n  'onKeyUp',\n  'onMouseDown',\n  'onMouseUp',\n  'onPaste',\n  'onSelect',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default EVENT_HANDLERS\n","/**\n * Other handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst OTHER_HANDLERS = [\n  'decorateNode',\n  'renderAnnotation',\n  'renderBlock',\n  'renderDecoration',\n  'renderDocument',\n  'renderEditor',\n  'renderInline',\n  'renderMark',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default OTHER_HANDLERS\n","/**\n * DOM data attribute strings that refer to Slate concepts.\n *\n * @type {String}\n */\n\nexport default {\n  EDITOR: 'data-slate-editor',\n  FRAGMENT: 'data-slate-fragment',\n  KEY: 'data-key',\n  LEAF: 'data-slate-leaf',\n  LENGTH: 'data-slate-length',\n  OBJECT: 'data-slate-object',\n  OFFSET_KEY: 'data-offset-key',\n  SPACER: 'data-slate-spacer',\n  STRING: 'data-slate-string',\n  TEXT: 'data-slate-object',\n  VOID: 'data-slate-void',\n  ZERO_WIDTH: 'data-slate-zero-width',\n}\n","import DATA_ATTRS from './data-attributes'\n\n/**\n * DOM selector strings that refer to Slate concepts.\n *\n * @type {String}\n */\n\nexport default {\n  BLOCK: `[${DATA_ATTRS.OBJECT}=\"block\"]`,\n  EDITOR: `[${DATA_ATTRS.EDITOR}]`,\n  INLINE: `[${DATA_ATTRS.OBJECT}=\"inline\"]`,\n  KEY: `[${DATA_ATTRS.KEY}]`,\n  LEAF: `[${DATA_ATTRS.LEAF}]`,\n  OBJECT: `[${DATA_ATTRS.OBJECT}]`,\n  STRING: `[${DATA_ATTRS.STRING}]`,\n  TEXT: `[${DATA_ATTRS.OBJECT}=\"text\"]`,\n  VOID: `[${DATA_ATTRS.VOID}]`,\n  ZERO_WIDTH: `[${DATA_ATTRS.ZERO_WIDTH}]`,\n}\n","/**\n * Offset key parser regex.\n *\n * @type {RegExp}\n */\n\nconst PARSER = /^([\\w-]+)(?::(\\d+))?$/\n\n/**\n * Parse an offset key `string`.\n *\n * @param {String} string\n * @return {Object}\n */\n\nfunction parse(string) {\n  const matches = PARSER.exec(string)\n\n  if (!matches) {\n    throw new Error(`Invalid offset key string \"${string}\".`)\n  }\n\n  const [original, key, index] = matches // eslint-disable-line no-unused-vars\n  return {\n    key,\n    index: parseInt(index, 10),\n  }\n}\n\n/**\n * Stringify an offset key `object`.\n *\n * @param {Object} object\n *   @property {String} key\n *   @property {Number} index\n * @return {String}\n */\n\nfunction stringify(object) {\n  return `${object.key}:${object.index}`\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default {\n  parse,\n  stringify,\n}\n","import React from 'react'\nimport { IS_FIREFOX } from 'slate-dev-environment'\n\nimport OffsetKey from '../utils/offset-key'\nimport DATA_ATTRS from '../constants/data-attributes'\n\nexport default class Leaf extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n    // This component may have skipped rendering due to native operations being\n    // applied. If an undo is performed React will see the old and new shadow DOM\n    // match and not apply an update. Forces each render to actually reconcile.\n    this.forceUpdateFlag = false\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // If a native operation has made the text content the same as what\n    // we are going to make it, skip. Maintains the native spell check handling.\n    const isZeroWidth = nextProps.text === ''\n    const domNode = this.ref.current\n    const domTextContent = domNode.textContent\n    const reactTextContent = isZeroWidth ? '\\uFEFF' : nextProps.text\n\n    if (domTextContent !== reactTextContent) {\n      return true\n    }\n\n    const oldDecorations = this.props.decorations.map(d => d.type).join(' ')\n    const newDecorations = nextProps.decorations.map(d => d.type).join(' ')\n\n    if (oldDecorations !== newDecorations) {\n      return true\n    }\n\n    // If we should be a zero width node, but there is some text content in the dom, then allow react to clean it up\n    if (isZeroWidth && domTextContent.replace(/[\\uFEFF]/g, '') !== '') {\n      return true\n    }\n\n    const isOnly =\n      nextProps.parent.nodes.size === 1 && nextProps.leaves.length === 1\n    const isLineBreak = false\n    const shouldHaveLineBreak =\n      (IS_FIREFOX && isLineBreak) || (!IS_FIREFOX && (isLineBreak || isOnly))\n\n    // Otherwise, we shouldn't have to touch the text node at all, we might need to strip the zero-width attributes though!\n    if (!isZeroWidth) {\n      if (domNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)) {\n        domNode.removeAttribute(DATA_ATTRS.ZERO_WIDTH)\n      }\n\n      if (domNode.hasAttribute(DATA_ATTRS.LENGTH)) {\n        domNode.removeAttribute(DATA_ATTRS.LENGTH)\n      }\n\n      if (!domNode.hasAttribute(DATA_ATTRS.STRING)) {\n        domNode.setAttribute(DATA_ATTRS.STRING, 'true')\n      }\n    } else {\n      if (!domNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)) {\n        domNode.setAttribute(DATA_ATTRS.ZERO_WIDTH, 'n')\n      }\n\n      if (!domNode.hasAttribute(DATA_ATTRS.LENGTH)) {\n        domNode.setAttribute(DATA_ATTRS.LENGTH, '0')\n      }\n\n      if (domNode.hasAttribute(DATA_ATTRS.STRING)) {\n        domNode.removeAttribute(DATA_ATTRS.STRING, 'true')\n      }\n    }\n\n    if (!shouldHaveLineBreak) {\n      for (const child of domNode.childNodes) {\n        if (child.tagName === 'BR') {\n          domNode.removeChild(child)\n        }\n      }\n    } else {\n      let hasLineBreak = false\n\n      for (const child of domNode.childNodes) {\n        if (child.tagName === 'BR') {\n          hasLineBreak = true\n          break\n        }\n      }\n\n      if (!hasLineBreak) {\n        domNode.appendChild(window.document.createElement('br'))\n      }\n    }\n\n    return false\n  }\n\n  componentDidMount() {\n    this.forceUpdateFlag = !this.forceUpdateFlag\n  }\n\n  componentDidUpdate() {\n    this.forceUpdateFlag = !this.forceUpdateFlag\n  }\n\n  render() {\n    const {\n      decorations,\n      node,\n      index,\n      offset,\n      text,\n      editor,\n      parent,\n      leaves,\n    } = this.props\n\n    const offsetKey = OffsetKey.stringify({\n      key: node.key,\n      index,\n    })\n    const isOnly = parent.nodes.size === 1 && leaves.length === 1\n    const isLineBreak = false\n    const isZeroWidth = text === ''\n    const shouldHaveLineBreak =\n      (IS_FIREFOX && isLineBreak) || (!IS_FIREFOX && (isLineBreak || isOnly))\n\n    const attrs = {\n      [DATA_ATTRS.LEAF]: true,\n      [DATA_ATTRS.OFFSET_KEY]: offsetKey,\n      key: this.forceUpdateFlag ? 'A' : 'B',\n    }\n\n    let children = isZeroWidth ? (\n      <span\n        ref={this.ref}\n        {...{\n          [DATA_ATTRS.ZERO_WIDTH]: isLineBreak ? 'n' : 'z',\n          [DATA_ATTRS.LENGTH]: 0,\n        }}\n      >\n        {'\\uFEFF'}\n        {shouldHaveLineBreak ? <br /> : null}\n      </span>\n    ) : (\n      <span\n        ref={this.ref}\n        {...{\n          [DATA_ATTRS.STRING]: true,\n        }}\n      >\n        {text}\n        {shouldHaveLineBreak ? <br /> : null}\n      </span>\n    )\n\n    if (text !== '') {\n      for (const decoration of decorations) {\n        const ret = editor.run('renderDecoration', {\n          editor,\n          decorations,\n          node,\n          offset,\n          text,\n          decoration,\n          children,\n          attributes: {\n            [DATA_ATTRS.OBJECT]: 'decoration',\n          },\n        })\n\n        if (ret) {\n          children = ret\n        }\n      }\n    }\n    return <span {...attrs}>{children}</span>\n  }\n}\n","import React from 'react'\n\nimport Leaf from './leaf'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Text node.\n *\n * @type {Component}\n */\n\nconst Text = React.forwardRef((props, ref) => {\n  const { decorations, node, parent, editor, style } = props\n  const { key } = node\n  const leaves = node.getLeaves(decorations)\n  let at = 0\n\n  return (\n    <span\n      ref={ref}\n      style={style}\n      {...{\n        [DATA_ATTRS.OBJECT]: node.object,\n        [DATA_ATTRS.KEY]: key,\n      }}\n    >\n      {leaves.map((leaf, index) => {\n        const { text } = leaf\n        const offset = at\n        at += text.length\n\n        return (\n          <Leaf\n            key={`${node.key}-${index}`}\n            block={parent}\n            editor={editor}\n            index={index}\n            decorations={leaf.decorations}\n            node={node}\n            offset={offset}\n            parent={parent}\n            leaves={leaves}\n            text={text}\n          />\n        )\n      })}\n    </span>\n  )\n})\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Text\n","import React from 'react'\nimport { getRelativeRange } from './block'\n\nimport Text from './text'\nimport DATA_ATTRS from '../constants/data-attributes'\n\nexport default class Inline extends React.Component {\n  tmp = { nodeRefs: {} }\n  ref = React.createRef()\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.node !== nextProps.node\n  }\n\n  render() {\n    const { editor, node, parent } = this.props\n\n    const decorations = node.getDecorations(editor)\n    const children = []\n\n    if (\n      node.nodes.size > 1 ||\n      (node.nodes.size === 1 && node.nodes.first().text !== ' ')\n    ) {\n      for (const child of node.nodes) {\n        const i = children.length\n\n        const refFn = ref => {\n          if (ref) {\n            this.tmp.nodeRefs[i] = ref\n          } else {\n            delete this.tmp.nodeRefs[i]\n          }\n        }\n\n        if (child.object === 'inline') {\n          children.push(\n            <Inline\n              ref={refFn}\n              key={child.key}\n              editor={editor}\n              node={child}\n              parent={node}\n            />\n          )\n        } else {\n          const decs = decorations\n            .map(d => getRelativeRange(node, i, d))\n            .filter(d => d)\n\n          children.push(\n            <Text\n              ref={refFn}\n              key={child.key}\n              editor={editor}\n              node={child}\n              parent={node}\n              decorations={decs}\n            />\n          )\n        }\n      }\n    }\n\n    // Attributes that the developer must mix into the element in their\n    // custom node renderer component.\n    const attributes = {\n      [DATA_ATTRS.OBJECT]: node.object,\n      [DATA_ATTRS.KEY]: node.key,\n      ref: this.ref,\n    }\n\n    return editor.run('renderInline', {\n      attributes,\n      children,\n      editor,\n      node,\n      parent,\n    })\n  }\n}\n","import React from 'react'\nimport { PathUtils } from 'slate'\n\nimport Inline from './inline'\nimport Text from './text'\nimport DATA_ATTRS from '../constants/data-attributes'\n\nexport default class Block extends React.Component {\n  tmp = { nodeRefs: {} }\n  ref = React.createRef()\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.node !== nextProps.node\n  }\n\n  render() {\n    const { editor, node, parent } = this.props\n\n    const decorations = node.getDecorations(editor)\n    const children = []\n\n    for (const child of node.nodes) {\n      const i = children.length\n\n      const refFn = ref => {\n        if (ref) {\n          this.tmp.nodeRefs[i] = ref\n        } else {\n          delete this.tmp.nodeRefs[i]\n        }\n      }\n\n      if (child.object === 'block') {\n        children.push(\n          <Block\n            ref={refFn}\n            key={child.key}\n            editor={editor}\n            node={child}\n            parent={node}\n          />\n        )\n      } else if (child.object === 'inline') {\n        children.push(\n          <Inline\n            ref={refFn}\n            key={child.key}\n            editor={editor}\n            node={child}\n            parent={node}\n          />\n        )\n      } else {\n        const decs = decorations\n          .map(d => getRelativeRange(node, i, d))\n          .filter(d => d)\n\n        children.push(\n          <Text\n            ref={refFn}\n            key={child.key}\n            editor={editor}\n            node={child}\n            parent={node}\n            decorations={decs}\n          />\n        )\n      }\n    }\n\n    // Attributes that the developer must mix into the element in their\n    // custom node renderer component.\n    const attributes = {\n      [DATA_ATTRS.OBJECT]: node.object,\n      [DATA_ATTRS.KEY]: node.key,\n      ref: this.ref,\n    }\n\n    // If it's a block node with inline children, add the proper `dir` attribute\n    // for text direction.\n    if (node.isLeafBlock()) {\n      const direction = node.getTextDirection()\n      if (direction === 'rtl') attributes.dir = 'rtl'\n    }\n\n    return editor.run('renderBlock', {\n      attributes,\n      children,\n      editor,\n      node,\n      parent,\n    })\n  }\n}\n\n/**\n * Return a `range` relative to a child at `index`.\n *\n * @param {Range} range\n * @param {Number} index\n * @return {Range}\n */\n\nexport function getRelativeRange(node, index, range) {\n  if (range.isUnset) {\n    return null\n  }\n\n  const child = node.nodes.get(index)\n  let { start, end } = range\n  const { path: startPath } = start\n  const { path: endPath } = end\n  const startIndex = startPath.first()\n  const endIndex = endPath.first()\n\n  if (startIndex === index) {\n    start = start.setPath(startPath.rest())\n  } else if (startIndex < index && index <= endIndex) {\n    if (child.object === 'text') {\n      start = start.moveTo(PathUtils.create([index]), 0).setKey(child.key)\n    } else {\n      const [first] = child.texts()\n      const [firstNode, firstPath] = first\n      start = start.moveTo(firstPath, 0).setKey(firstNode.key)\n    }\n  } else {\n    start = null\n  }\n\n  if (endIndex === index) {\n    end = end.setPath(endPath.rest())\n  } else if (startIndex <= index && index < endIndex) {\n    if (child.object === 'text') {\n      const length = child.text.length\n      end = end.moveTo(PathUtils.create([index]), length).setKey(child.key)\n    } else {\n      const [last] = child.texts({ direction: 'backward' })\n      const [lastNode, lastPath] = last\n      end = end.moveTo(lastPath, lastNode.text.length).setKey(lastNode.key)\n    }\n  } else {\n    end = null\n  }\n\n  if (!start || !end) {\n    return null\n  }\n\n  range = range.setAnchor(start)\n  range = range.setFocus(end)\n  return range\n}\n","import React from 'react'\n\nimport Block from './block'\nimport Inline from './inline'\nimport Text from './text'\n\nexport default class Document extends React.Component {\n  tmp = { nodeRefs: {} }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.node !== nextProps.node\n  }\n\n  render() {\n    const { editor, node } = this.props\n\n    const children = []\n\n    for (const child of node.nodes) {\n      const Component =\n        child.object === 'text'\n          ? Text\n          : child.object === 'block' ? Block : Inline\n      const i = children.length\n\n      children.push(\n        <Component\n          key={child.key}\n          editor={editor}\n          node={child}\n          parent={node}\n          // COMPAT: We use this map of refs to lookup a DOM node down the\n          // tree of components by path.\n          ref={ref => {\n            if (ref) {\n              this.tmp.nodeRefs[i] = ref\n            } else {\n              delete this.tmp.nodeRefs[i]\n            }\n          }}\n        />\n      )\n    }\n\n    return children\n  }\n}\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { IS_SAFARI, IS_IOS } from 'slate-dev-environment'\n\n/**\n * CSS overflow values that would cause scrolling.\n *\n * @type {Array}\n */\n\nconst OVERFLOWS = ['auto', 'overlay', 'scroll']\n\n/**\n * Detect whether we are running IOS version 11\n */\n\nconst IS_IOS_11 = IS_IOS && !!window.navigator.userAgent.match(/os 11_/i)\n\n/**\n * Find the nearest parent with scrolling, or window.\n *\n * @param {el} Element\n */\n\nfunction findScrollContainer(el, window) {\n  let parent = el.parentNode\n  let scroller\n\n  while (!scroller) {\n    if (!parent.parentNode) break\n\n    const style = window.getComputedStyle(parent)\n    const { overflowY } = style\n\n    if (OVERFLOWS.includes(overflowY)) {\n      scroller = parent\n      break\n    }\n\n    parent = parent.parentNode\n  }\n\n  // COMPAT: Because Chrome does not allow doucment.body.scrollTop, we're\n  // assuming that window.scrollTo() should be used if the scrollable element\n  // turns out to be document.body or document.documentElement. This will work\n  // unless body is intentionally set to scrollable by restricting its height\n  // (e.g. height: 100vh).\n  if (!scroller) {\n    return window.document.body\n  }\n\n  return scroller\n}\n\n/**\n * Scroll the current selection's focus point into view if needed.\n *\n * @param {Selection} selection\n */\n\nfunction scrollToSelection(selection) {\n  if (IS_IOS_11) return\n  if (!selection.anchorNode) return\n\n  const window = getWindow(selection.anchorNode)\n  const scroller = findScrollContainer(selection.anchorNode, window)\n  const isWindow =\n    scroller === window.document.body ||\n    scroller === window.document.documentElement\n  const backward = isBackward(selection)\n\n  const range = selection.getRangeAt(0).cloneRange()\n  range.collapse(backward)\n  let cursorRect = range.getBoundingClientRect()\n\n  // COMPAT: range.getBoundingClientRect() returns 0s in Safari when range is\n  // collapsed. Expanding the range by 1 is a relatively effective workaround\n  // for vertical scroll, although horizontal may be off by 1 character.\n  // https://bugs.webkit.org/show_bug.cgi?id=138949\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=435438\n  if (IS_SAFARI) {\n    if (range.collapsed && cursorRect.top === 0 && cursorRect.height === 0) {\n      if (range.startOffset === 0) {\n        range.setEnd(range.endContainer, 1)\n      } else {\n        range.setStart(range.startContainer, range.startOffset - 1)\n      }\n\n      cursorRect = range.getBoundingClientRect()\n\n      if (cursorRect.top === 0 && cursorRect.height === 0) {\n        if (range.getClientRects().length) {\n          cursorRect = range.getClientRects()[0]\n        }\n      }\n    }\n  }\n\n  let width\n  let height\n  let yOffset\n  let xOffset\n  let scrollerTop = 0\n  let scrollerLeft = 0\n  let scrollerBordersY = 0\n  let scrollerBordersX = 0\n  let scrollerPaddingTop = 0\n  let scrollerPaddingBottom = 0\n  let scrollerPaddingLeft = 0\n  let scrollerPaddingRight = 0\n\n  if (isWindow) {\n    const { innerWidth, innerHeight, pageYOffset, pageXOffset } = window\n    width = innerWidth\n    height = innerHeight\n    yOffset = pageYOffset\n    xOffset = pageXOffset\n  } else {\n    const { offsetWidth, offsetHeight, scrollTop, scrollLeft } = scroller\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n    } = window.getComputedStyle(scroller)\n\n    const scrollerRect = scroller.getBoundingClientRect()\n    width = offsetWidth\n    height = offsetHeight\n    scrollerTop = scrollerRect.top + parseInt(borderTopWidth, 10)\n    scrollerLeft = scrollerRect.left + parseInt(borderLeftWidth, 10)\n\n    scrollerBordersY =\n      parseInt(borderTopWidth, 10) + parseInt(borderBottomWidth, 10)\n\n    scrollerBordersX =\n      parseInt(borderLeftWidth, 10) + parseInt(borderRightWidth, 10)\n\n    scrollerPaddingTop = parseInt(paddingTop, 10)\n    scrollerPaddingBottom = parseInt(paddingBottom, 10)\n    scrollerPaddingLeft = parseInt(paddingLeft, 10)\n    scrollerPaddingRight = parseInt(paddingRight, 10)\n    yOffset = scrollTop\n    xOffset = scrollLeft\n  }\n\n  const cursorTop = cursorRect.top + yOffset - scrollerTop\n  const cursorLeft = cursorRect.left + xOffset - scrollerLeft\n\n  let x = xOffset\n  let y = yOffset\n\n  if (cursorLeft < xOffset) {\n    // selection to the left of viewport\n    x = cursorLeft - scrollerPaddingLeft\n  } else if (\n    cursorLeft + cursorRect.width + scrollerBordersX >\n    xOffset + width\n  ) {\n    // selection to the right of viewport\n    x = cursorLeft + scrollerBordersX + scrollerPaddingRight - width\n  }\n\n  if (cursorTop < yOffset) {\n    // selection above viewport\n    y = cursorTop - scrollerPaddingTop\n  } else if (\n    cursorTop + cursorRect.height + scrollerBordersY >\n    yOffset + height\n  ) {\n    // selection below viewport\n    y =\n      cursorTop +\n      scrollerBordersY +\n      scrollerPaddingBottom +\n      cursorRect.height -\n      height\n  }\n\n  if (isWindow) {\n    window.scrollTo(x, y)\n  } else {\n    scroller.scrollTop = y\n    scroller.scrollLeft = x\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default scrollToSelection\n","import { IS_IE } from 'slate-dev-environment'\n\n/**\n * Cross-browser remove all ranges from a `domSelection`.\n *\n * @param {Selection} domSelection\n */\n\nfunction removeAllRanges(domSelection) {\n  // COMPAT: In IE 11, if the selection contains nested tables, then\n  // `removeAllRanges` will throw an error.\n  if (IS_IE) {\n    const range = window.document.body.createTextRange()\n    range.collapse()\n    range.select()\n  } else {\n    domSelection.removeAllRanges()\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default removeAllRanges\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport warning from 'tiny-warning'\nimport throttle from 'lodash/throttle'\nimport omit from 'lodash/omit'\nimport {\n  IS_ANDROID,\n  IS_FIREFOX,\n  HAS_INPUT_EVENTS_LEVEL_2,\n} from 'slate-dev-environment'\nimport Hotkeys from 'slate-hotkeys'\nimport getWindow from 'get-window'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\nimport Document from './document'\nimport scrollToSelection from '../utils/scroll-to-selection'\nimport removeAllRanges from '../utils/remove-all-ranges'\n\nconst FIREFOX_NODE_TYPE_ACCESS_ERROR = /Permission denied to access property \"nodeType\"/\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:content')\n\n/**\n * Separate debug to easily see when the DOM has updated either by render or\n * changing selection.\n *\n * @type {Function}\n */\n\ndebug.update = Debug('slate:update')\n\n/**\n * Content.\n *\n * @type {Component}\n */\n\nclass Content extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static __propTypes = {\n    autoCorrect: Types.bool.isRequired,\n    className: Types.string,\n    contentKey: Types.number,\n    editor: Types.object.isRequired,\n    id: Types.string,\n    onContextMenu: Types.func,\n    onEvent: Types.func.isRequired,\n    domRef: Types.func,\n    readOnly: Types.bool.isRequired,\n    role: Types.string,\n    spellCheck: Types.bool.isRequired,\n    style: Types.object,\n    tabIndex: Types.number,\n    tagName: Types.string,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: {},\n    tagName: 'div',\n  }\n\n  /**\n   * An error boundary. If there is a render error, we increment `errorKey`\n   * which is part of the container `key` which forces a re-render from\n   * scratch.\n   *\n   * @param {Error} error\n   * @param {String} info\n   */\n\n  componentDidCatch(error, info) {\n    console.error('!!  COMPONENT DID CATCH')\n    console.error(error)\n    console.error(info)\n    debug('componentDidCatch', { error, info })\n    // The call to `setState` is required despite not setting a value.\n    // Without this call, React will not try to recreate the component tree.\n    this.setState({})\n  }\n\n  /**\n   * Temporary values.\n   *\n   * @type {Object}\n   */\n\n  tmp = {\n    isUpdatingSelection: false,\n    nodeRef: React.createRef(),\n    nodeRefs: {},\n    contentKey: 0,\n    nativeSelection: {}, // Native selection object stored to check if `onNativeSelectionChange` has triggered yet\n  }\n\n  /**\n   * A ref for the contenteditable DOM node.\n   *\n   * @type {Object}\n   */\n\n  ref = React.createRef()\n\n  /**\n   * Set `this.ref`, `editor.el`, and `editor.ownerWindow`\n   *\n   * @type {DOMElement}\n   */\n\n  setRef = el => {\n    this.ref.current = el\n    this.props.editor.el = el\n\n    if (this.props.domRef) {\n      this.props.domRef(el)\n    }\n\n    if (el) {\n      this.props.editor.ownerWindow = getWindow(el)\n    }\n  }\n\n  /**\n   * Create a set of bound event handlers.\n   *\n   * @type {Object}\n   */\n\n  handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n    obj[handler] = event => this.onEvent(handler, event)\n    return obj\n  }, {})\n\n  /**\n   * When the editor first mounts in the DOM we need to:\n   *\n   *   - Add native DOM event listeners.\n   *   - Update the selection, in case it starts focused.\n   */\n\n  componentDidMount() {\n    const { editor } = this.props\n\n    editor.ownerWindow.document.addEventListener(\n      'selectionchange',\n      this.onNativeSelectionChange\n    )\n\n    // COMPAT: Restrict scope of `beforeinput` to clients that support the\n    // Input Events Level 2 spec, since they are preventable events.\n    if (HAS_INPUT_EVENTS_LEVEL_2 && this.ref.current) {\n      this.ref.current.addEventListener(\n        'beforeinput',\n        this.handlers.onBeforeInput\n      )\n    }\n\n    this.updateSelection()\n\n    this.props.onEvent('onComponentDidMount')\n  }\n\n  /**\n   * When unmounting, remove DOM event listeners.\n   */\n\n  componentWillUnmount() {\n    const { editor } = this.props\n\n    if (editor.ownerWindow) {\n      editor.ownerWindow.document.removeEventListener(\n        'selectionchange',\n        this.onNativeSelectionChange\n      )\n    }\n\n    if (HAS_INPUT_EVENTS_LEVEL_2) {\n      this.ref.current.removeEventListener(\n        'beforeinput',\n        this.handlers.onBeforeInput\n      )\n    }\n\n    this.props.onEvent('onComponentWillUnmount')\n  }\n\n  /**\n   * On update, update the selection.\n   */\n\n  componentDidUpdate() {\n    debug.update('componentDidUpdate')\n\n    this.updateSelection()\n    this.props.editor.clearUserActionPerformed()\n\n    this.props.onEvent('onComponentDidUpdate')\n  }\n\n  /**\n   * Update the native DOM selection to reflect the internal model.\n   */\n\n  updateSelection = () => {\n    if (!this.ref.current) return\n    const { editor } = this.props\n\n    // While the editor is handling a composition (like for Asian input), we allow the browser to modify the DOM\n    // and we avoid modifying slate's internal representation of the document until the composition is over.\n    // Because of this the user might have typed a character at position 4, but slate thinks there is only\n    // 3 characters in the node!  So, the work around is to skip syncing slate's view of the selection to the DOM\n    // until the composition is over.\n    if (editor.isComposing() && HAS_INPUT_EVENTS_LEVEL_2) return\n\n    const { value } = editor\n    const { selection } = value\n    const { isBackward } = selection\n    const native = editor.ownerWindow.getSelection()\n    const { activeElement } = editor.ownerWindow.document\n\n    if (debug.update.enabled) {\n      debug.update('updateSelection', { selection: selection.toJSON() })\n    }\n\n    // COMPAT: In Firefox, there's a but where `getSelection` can return `null`.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=827585 (2018/11/07)\n    if (!native) {\n      return\n    }\n\n    const { rangeCount, anchorNode } = native\n    let updated = false\n\n    // If the Slate selection is blurred, but the DOM's active element is still\n    // the editor, we need to blur it.\n    if (selection.isBlurred && activeElement === this.ref.current) {\n      this.ref.current.blur()\n      updated = true\n    }\n\n    // If the Slate selection is unset, but the DOM selection has a range\n    // selected in the editor, we need to remove the range.\n    // However we should _not_ remove the range if the selection as\n    // reported by `getSelection` is not equal to `this.tmp.nativeSelection`\n    // as this suggests `onNativeSelectionChange` has not triggered yet (which can occur in Firefox)\n    // See: https://github.com/ianstormtaylor/slate/pull/2995\n\n    const propsToCompare = [\n      'anchorNode',\n      'anchorOffset',\n      'focusNode',\n      'focusOffset',\n      'isCollapsed',\n      'rangeCount',\n      'type',\n    ]\n\n    let selectionsEqual = true\n\n    for (const prop of propsToCompare) {\n      if (this.tmp.nativeSelection[prop] !== native[prop]) {\n        selectionsEqual = false\n      }\n    }\n\n    if (\n      selection.isUnset &&\n      rangeCount &&\n      this.isInEditor(anchorNode) &&\n      selectionsEqual\n    ) {\n      removeAllRanges(native)\n      updated = true\n    }\n\n    // If the Slate selection is focused, but the DOM's active element is not\n    // the editor, we need to focus it. We prevent scrolling because we handle\n    // scrolling to the correct selection.\n    if (selection.isFocused && activeElement !== this.ref.current) {\n      this.ref.current.focus({ preventScroll: true })\n      updated = true\n    }\n\n    // Otherwise, figure out which DOM nodes should be selected...\n    if (selection.isFocused && selection.isSet) {\n      const current = !!native.rangeCount && native.getRangeAt(0)\n      const range = safelyFindDOMRange(editor, selection)\n\n      if (!range) {\n        warning(\n          false,\n          'Unable to find a native DOM range from the current selection.'\n        )\n\n        return\n      }\n\n      const { startContainer, startOffset, endContainer, endOffset } = range\n\n      // If the new range matches the current selection, there is nothing to fix.\n      // COMPAT: The native `Range` object always has it's \"start\" first and \"end\"\n      // last in the DOM. It has no concept of \"backwards/forwards\", so we have\n      // to check both orientations here. (2017/10/31)\n      if (current) {\n        if (\n          (startContainer === current.startContainer &&\n            startOffset === current.startOffset &&\n            endContainer === current.endContainer &&\n            endOffset === current.endOffset) ||\n          (startContainer === current.endContainer &&\n            startOffset === current.endOffset &&\n            endContainer === current.startContainer &&\n            endOffset === current.startOffset)\n        ) {\n          return\n        }\n      }\n\n      // Otherwise, set the `isUpdatingSelection` flag and update the selection.\n      updated = true\n      this.tmp.isUpdatingSelection = true\n      removeAllRanges(native)\n\n      // COMPAT: IE 11 does not support `setBaseAndExtent`. (2018/11/07)\n      if (native.setBaseAndExtent) {\n        // COMPAT: Since the DOM range has no concept of backwards/forwards\n        // we need to check and do the right thing here.\n        if (isBackward) {\n          native.setBaseAndExtent(\n            range.endContainer,\n            range.endOffset,\n            range.startContainer,\n            range.startOffset\n          )\n        } else {\n          native.setBaseAndExtent(\n            range.startContainer,\n            range.startOffset,\n            range.endContainer,\n            range.endOffset\n          )\n        }\n      } else {\n        native.addRange(range)\n      }\n\n      // Only scroll to selection when a user action is performed\n      if (editor.userActionPerformed() === true) {\n        // Scroll to the selection, in case it's out of view.\n        scrollToSelection(native)\n      }\n\n      // Then unset the `isUpdatingSelection` flag after a delay, to ensure that\n      // it is still set when selection-related events from updating it fire.\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (IS_FIREFOX && this.ref.current) {\n          this.ref.current.focus()\n        }\n\n        this.tmp.isUpdatingSelection = false\n\n        debug.update('updateSelection:setTimeout', {\n          anchorOffset: editor.ownerWindow.getSelection().anchorOffset,\n        })\n      })\n    }\n\n    if (updated && (debug.enabled || debug.update.enabled)) {\n      debug('updateSelection', { selection, native, activeElement })\n\n      debug.update('updateSelection:applied', {\n        selection: selection.toJSON(),\n        native: {\n          anchorOffset: native.anchorOffset,\n          focusOffset: native.focusOffset,\n        },\n      })\n    }\n  }\n\n  /**\n   * Check if an event `target` is fired from within the contenteditable\n   * element. This should be false for edits happening in non-contenteditable\n   * children, such as void nodes and other nested Slate editors.\n   *\n   * @param {Element} target\n   * @return {Boolean}\n   */\n\n  isInEditor = target => {\n    let el\n\n    try {\n      // COMPAT: In Firefox, sometimes the node can be comment which doesn't\n      // have .closest and it crashes.\n      if (target.nodeType === 8) {\n        return false\n      }\n\n      // COMPAT: Text nodes don't have `isContentEditable` property. So, when\n      // `target` is a text node use its parent node for check.\n      el = target.nodeType === 3 ? target.parentNode : target\n    } catch (err) {\n      // COMPAT: In Firefox, `target.nodeType` will throw an error if target is\n      // originating from an internal \"restricted\" element (e.g. a stepper\n      // arrow on a number input)\n      // see github.com/ianstormtaylor/slate/issues/1819\n      if (IS_FIREFOX && FIREFOX_NODE_TYPE_ACCESS_ERROR.test(err.message)) {\n        return false\n      }\n\n      throw err\n    }\n\n    return (\n      el.isContentEditable &&\n      (el === this.ref.current ||\n        el.closest(SELECTORS.EDITOR) === this.ref.current)\n    )\n  }\n\n  /**\n   * On `event` with `handler`.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent(handler, event) {\n    debug('onEvent', handler)\n\n    const nativeEvent = event.nativeEvent || event\n    const isUndoRedo =\n      event.type === 'keydown' &&\n      (Hotkeys.isUndo(nativeEvent) || Hotkeys.isRedo(nativeEvent))\n\n    // Ignore `onBlur`, `onFocus` and `onSelect` events generated\n    // programmatically while updating selection.\n    if (\n      (this.tmp.isUpdatingSelection || isUndoRedo) &&\n      (handler === 'onSelect' || handler === 'onBlur' || handler === 'onFocus')\n    ) {\n      return\n    }\n\n    // COMPAT: There are situations where a select event will fire with a new\n    // native selection that resolves to the same internal position. In those\n    // cases we don't need to trigger any changes, since our internal model is\n    // already up to date, but we do want to update the native selection again\n    // to make sure it is in sync. (2017/10/16)\n    //\n    // ANDROID: The updateSelection causes issues in Android when you are\n    // at the end of a block. The selection ends up to the left of the inserted\n    // character instead of to the right. This behavior continues even if\n    // you enter more than one character. (2019/01/03)\n    if (!IS_ANDROID && handler === 'onSelect') {\n      const { editor } = this.props\n      const { value } = editor\n      const { selection } = value\n      const domSelection = editor.ownerWindow.getSelection()\n      const range = editor.findRange(domSelection)\n\n      if (range && range.equals(selection.toRange())) {\n        this.updateSelection()\n        return\n      }\n    }\n\n    // Don't handle drag and drop events coming from embedded editors.\n    if (\n      handler === 'onDragEnd' ||\n      handler === 'onDragEnter' ||\n      handler === 'onDragExit' ||\n      handler === 'onDragLeave' ||\n      handler === 'onDragOver' ||\n      handler === 'onDragStart' ||\n      handler === 'onDrop'\n    ) {\n      const closest = event.target.closest(SELECTORS.EDITOR)\n\n      if (closest !== this.ref.current) {\n        return\n      }\n    }\n\n    // Some events require being in editable in the editor, so if the event\n    // target isn't, ignore them.\n    if (\n      handler === 'onBeforeInput' ||\n      handler === 'onBlur' ||\n      handler === 'onCompositionEnd' ||\n      handler === 'onCompositionUpdate' ||\n      handler === 'onCompositionStart' ||\n      handler === 'onCopy' ||\n      handler === 'onCut' ||\n      handler === 'onFocus' ||\n      handler === 'onInput' ||\n      handler === 'onKeyDown' ||\n      handler === 'onKeyUp' ||\n      handler === 'onPaste' ||\n      handler === 'onSelect'\n    ) {\n      if (!this.isInEditor(event.target)) {\n        return\n      }\n    }\n\n    this.props.onEvent(handler, event)\n  }\n\n  /**\n   * On native `selectionchange` event, trigger the `onSelect` handler. This is\n   * needed to account for React's `onSelect` being non-standard and not firing\n   * until after a selection has been released. This causes issues in situations\n   * where another change happens while a selection is being made.\n   *\n   * @param {Event} event\n   */\n\n  onNativeSelectionChange = throttle(event => {\n    if (this.props.readOnly) return\n\n    const { editor } = this.props\n    const { activeElement } = editor.ownerWindow.document\n    const native = editor.ownerWindow.getSelection()\n\n    debug.update('onNativeSelectionChange', {\n      anchorOffset: native.anchorOffset,\n    })\n\n    if (activeElement !== this.ref.current) return\n\n    this.tmp.nativeSelection = {\n      anchorNode: native.anchorNode,\n      anchorOffset: native.anchorOffset,\n      focusNode: native.focusNode,\n      focusOffset: native.focusOffset,\n      isCollapsed: native.isCollapsed,\n      rangeCount: native.rangeCount,\n      type: native.type,\n    }\n\n    this.props.onEvent('onSelect', event)\n  }, 100)\n\n  /**\n   * Render the editor content.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props, handlers } = this\n    const {\n      id,\n      className,\n      readOnly,\n      editor,\n      tabIndex,\n      role,\n      tagName,\n      spellCheck,\n      onContextMenu,\n    } = props\n    const { value } = editor\n    const Container = tagName\n    const { document } = value\n\n    const style = {\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word',\n      // COMPAT: In iOS, a formatting menu with bold, italic and underline\n      // buttons is shown which causes our internal value to get out of sync in\n      // weird ways. This hides that. (2016/06/21)\n      ...(readOnly ? {} : { WebkitUserModify: 'read-write-plaintext-only' }),\n      // Allow for passed-in styles to override anything.\n      ...props.style,\n    }\n\n    // console.log('rerender content', this.tmp.contentKey, document.text)\n\n    debug('render', { props })\n    debug.update('render', this.tmp.contentKey, document.text)\n\n    this.props.onEvent('onRender')\n\n    const data = {\n      [DATA_ATTRS.EDITOR]: true,\n      [DATA_ATTRS.KEY]: document.key,\n    }\n\n    const domProps = omit(this.props, Object.keys(Content.__propTypes))\n\n    return (\n      <Container\n        {...domProps}\n        key={this.tmp.contentKey}\n        {...handlers}\n        {...data}\n        ref={this.setRef}\n        contentEditable={readOnly ? null : true}\n        suppressContentEditableWarning\n        id={id}\n        className={className}\n        autoCorrect={props.autoCorrect ? 'on' : 'off'}\n        spellCheck={spellCheck}\n        style={style}\n        role={readOnly ? null : role || 'textbox'}\n        tabIndex={tabIndex}\n        onContextMenu={onContextMenu}\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM out\n        // from under `contenteditable` elements, which leads to weird behaviors\n        // so we have to disable it like this. (2017/04/24)\n\n        // just the existence of the flag is disabling the extension irrespective of its value\n        data-gramm={domProps['data-gramm'] ? undefined : false}\n      >\n        <Document editor={editor} node={document} ref={this.tmp.nodeRef} />\n      </Container>\n    )\n  }\n}\n\nfunction safelyFindDOMRange(editor, selection) {\n  try {\n    return editor.findDOMRange(selection)\n  } catch (e) {\n    console.error(e)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Content\n","import EVENT_HANDLERS from '../../constants/event-handlers'\n\n/**\n * Props that can be defined by plugins.\n *\n * @type {Array}\n */\n\nconst PROPS = [\n  ...EVENT_HANDLERS,\n  'commands',\n  'decorateNode',\n  'queries',\n  'renderAnnotation',\n  'renderBlock',\n  'renderDecoration',\n  'renderDocument',\n  'renderEditor',\n  'renderInline',\n  'renderMark',\n  'schema',\n]\n\n/**\n * The top-level editor props in a plugin.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction EditorPropsPlugin(options = {}) {\n  const plugin = PROPS.reduce((memo, prop) => {\n    if (prop in options) memo[prop] = options[prop]\n    return memo\n  }, {})\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default EditorPropsPlugin\n","import React from 'react'\n\n/**\n * The default rendering behavior for the React plugin.\n *\n * @return {Object}\n */\n\nfunction Rendering() {\n  return {\n    decorateNode() {\n      return []\n    },\n\n    renderAnnotation({ attributes, children }) {\n      return <span {...attributes}>{children}</span>\n    },\n\n    renderBlock({ attributes, children }) {\n      return (\n        <div {...attributes} style={{ position: 'relative' }}>\n          {children}\n        </div>\n      )\n    },\n\n    renderDecoration({ attributes, children }) {\n      return <span {...attributes}>{children}</span>\n    },\n\n    renderDocument({ children }) {\n      return children\n    },\n\n    renderEditor({ children }) {\n      return children\n    },\n\n    renderInline({ attributes, children }) {\n      return (\n        <span {...attributes} style={{ position: 'relative' }}>\n          {children}\n        </span>\n      )\n    },\n\n    renderMark({ attributes, children }) {\n      return <span {...attributes}>{children}</span>\n    },\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default Rendering\n","import SELECTORS from '../constants/selectors'\n\nexport default function safelyGetParentKeyNode(node) {\n  if (node == null) return null\n\n  if (node.closest == null) node = node.parentElement\n  if (node.hasAttribute(SELECTORS.KEY)) return node\n  return node.closest(SELECTORS.KEY)\n}\n","import { Block, Range, Text } from 'slate'\nimport safelyGetParentKeyNode from './safely-get-parent-key-node'\nimport DATA_ATTRS from '../constants/data-attributes'\n\nexport default function sanitizeDomOnError(editor, domNode, fn) {\n  try {\n    return { failed: false, value: fn() }\n  } catch (e) {\n    console.warn('Safely handling caught error, reconciling dom', e)\n\n    // Woo!  So, if we get here, something has gone horribly wrong and the browser has modified the dom in a way\n    // that slate can no longer understand.  So, in this event, we are going to replace the entire line (which changes\n    // the react key and forces react to re-build the dom), and this will get everything back into a working state\n    // hopefully.\n    const domElement = safelyGetParentKeyNode(domNode)\n    if (domElement == null) return { failed: true }\n\n    const key = domElement.getAttribute(DATA_ATTRS.KEY)\n    const slateNode = editor.value.document.getNode(key)\n    if (slateNode == null) return { failed: true }\n\n    const blockNode =\n      slateNode.object === 'block'\n        ? slateNode\n        : editor.value.document.getClosestBlock(slateNode.key)\n    if (blockNode == null) return { failed: true }\n\n    const lineIndex = editor.value.document.nodes.indexOf(blockNode)\n    const selection = domElement.ownerDocument.defaultView.getSelection()\n\n    if (\n      selection != null &&\n      selection.isCollapsed &&\n      blockNode === slateNode &&\n      lineIndex >= 0 &&\n      domElement.tagName === 'DIV' &&\n      domElement.childNodes.length === 1 &&\n      (domElement.childNodes[0] === selection.anchorNode ||\n        domElement === selection.anchorNode)\n    ) {\n      console.log('    replacing entire line via dom text')\n\n      editor.replaceNodeByKey(\n        blockNode.key,\n        Block.create({\n          type: 'line',\n          nodes: [Text.create({ text: domElement.textContent })],\n        })\n      )\n\n      const newNode = editor.value.document.nodes.get(lineIndex)\n      const textNode = newNode.nodes.first()\n      const point = { key: textNode.key, offset: selection.anchorOffset }\n      editor.select(Range.create({ anchor: point, focus: point }))\n    } else {\n      console.log('    replacing entire line')\n      editor.replaceNodeByKey(blockNode.key, Block.create(blockNode.toJSON()))\n    }\n\n    return { failed: true }\n  }\n}\n","import sanitizeDomOnError from '../../utils/sanitize-dom-on-error'\n\n/**\n * Takes a `node`, find the matching `domNode` and uses it to set the text\n * in the `node`.\n *\n * @param {Editor} editor\n * @param {Node} node\n */\n\nfunction reconcileNode(editor, node) {\n  const { value } = editor\n  const { document, selection } = value\n  const path = document.getPath(node.key)\n\n  const domElement = editor.findDOMNode(path)\n  const block = document.getClosestBlock(path)\n\n  // Get text information\n  const { text } = node\n  let { textContent: domText } = domElement\n\n  const isLastNode = block.nodes.last() === node\n  const lastChar = domText.charAt(domText.length - 1)\n\n  // COMPAT: If this is the last leaf, and the DOM text ends in a new line,\n  // we will have added another new line in <Leaf>'s render method to account\n  // for browsers collapsing a single trailing new lines, so remove it.\n  if (isLastNode && lastChar === '\\n') {\n    domText = domText.slice(0, -1)\n  }\n\n  // If the text is no different, abort.\n  // Ignore all zero-width spaces here.  There will definitely be some in the dom\n  // and we don't want those to make slate thing that the dom does not match the slate AST:\n  if (text.replace(/[\\uFEFF\\b]/g, '') === domText.replace(/[\\uFEFF\\b]/g, ''))\n    return\n\n  let entire = selection.moveAnchorTo(path, 0).moveFocusTo(path, text.length)\n\n  entire = document.resolveRange(entire)\n\n  console.warn('!!  Forced to reconcile dom node :((')\n\n  // Change the current value to have the leaf's text replaced.\n  editor.insertTextAtRange(\n    entire,\n    domText.replace(/[\\uFEFF\\b]/g, ''),\n    node.marks\n  )\n  return\n}\n\n/**\n * Takes text from the `domNode` and uses it to set the text in the matching\n * `node` in Slate.\n *\n * @param {Editor} editor\n * @param {DOMNode} domNode\n */\n\nexport function reconcileDOMNode(editor, domNode) {\n  return sanitizeDomOnError(editor, domNode, () => {\n    const domElement = domNode.parentElement.closest('[data-key]')\n    const node = editor.findNode(domElement)\n    reconcileNode(editor, node)\n  }).value\n}\n\n/**\n * A set of commands for the React plugin.\n *\n * @return {Object}\n */\n\nfunction CommandsPlugin() {\n  return {\n    commands: {\n      reconcileNode,\n      reconcileDOMNode,\n    },\n  }\n}\n\nexport default CommandsPlugin\n","import { PathUtils } from 'slate'\n\nimport DATA_ATTRS from '../../constants/data-attributes'\nimport SELECTORS from '../../constants/selectors'\n\n/**\n * A set of queries for the React plugin.\n *\n * @return {Object}\n */\n\nfunction QueriesPlugin() {\n  /**\n   * Find the native DOM element for a node at `path`.\n   *\n   * @param {Editor} editor\n   * @param {Array|List} path\n   * @return {DOMNode|Null}\n   */\n\n  function findDOMNode(editor, path) {\n    path = PathUtils.create(path)\n    const content = editor.tmp.contentRef.current\n\n    if (!content) {\n      return null\n    }\n\n    if (!path.size) {\n      return content.ref.current || null\n    }\n\n    const search = (instance, p) => {\n      if (!instance) {\n        return null\n      }\n\n      if (!p.size) {\n        if (instance.ref) {\n          return instance.ref.current || null\n        } else {\n          return instance || null\n        }\n      }\n\n      const index = p.first()\n      const rest = p.rest()\n      const ref = instance.tmp.nodeRefs[index]\n      return search(ref, rest)\n    }\n\n    const document = content.tmp.nodeRef.current\n    const el = search(document, path)\n    return el\n  }\n\n  /**\n   * Find a native DOM selection point from a Slate `point`.\n   *\n   * @param {Editor} editor\n   * @param {Point} point\n   * @return {Object|Null}\n   */\n\n  function findDOMPoint(editor, point) {\n    const el = findDOMNode(editor, point.path)\n    let start = 0\n\n    if (!el) {\n      return null\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering to its\n    // direct text and zero-width spans. (We have to filter out any other siblings\n    // that may have been rendered alongside them.)\n    const texts = Array.from(\n      el.querySelectorAll(`${SELECTORS.STRING}, ${SELECTORS.ZERO_WIDTH}`)\n    )\n\n    for (const text of texts) {\n      const node = text.childNodes[0]\n      const domLength = node.textContent.length\n      let slateLength = domLength\n\n      if (text.hasAttribute(DATA_ATTRS.LENGTH)) {\n        slateLength = parseInt(text.getAttribute(DATA_ATTRS.LENGTH), 10)\n      }\n\n      const end = start + slateLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(domLength, Math.max(0, point.offset - start))\n        return { node, offset }\n      }\n\n      start = end\n    }\n\n    return null\n  }\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * @param {Editor} editor\n   * @param {Range} range\n   * @return {DOMRange|Null}\n   */\n\n  function findDOMRange(editor, range) {\n    const { anchor, focus, isBackward, isCollapsed } = range\n    const domAnchor = findDOMPoint(editor, anchor)\n    const domFocus = isCollapsed ? domAnchor : findDOMPoint(editor, focus)\n\n    if (!domAnchor || !domFocus) {\n      return null\n    }\n\n    const r = editor.ownerWindow.document.createRange()\n    const start = isBackward ? domFocus : domAnchor\n    const end = isBackward ? domAnchor : domFocus\n    r.setStart(start.node, start.offset)\n    r.setEnd(end.node, end.offset)\n    return r\n  }\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   *\n   * @param {Editor} editor\n   * @param {Element} element\n   * @return {List|Null}\n   */\n\n  function findNode(editor, element) {\n    const path = findPath(editor, element)\n\n    if (!path) {\n      return null\n    }\n\n    const { value } = editor\n    const { document } = value\n    const node = document.getNode(path)\n    return node\n  }\n\n  /**\n   * Get the target range from a DOM `event`.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @return {Range}\n   */\n\n  function findEventRange(editor, event) {\n    if (event.nativeEvent) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n    if (x == null || y == null) return null\n\n    const { value } = editor\n    const { document } = value\n    const path = findPath(editor, event.target)\n    if (!path) return null\n\n    const node = document.getNode(path)\n\n    // If the drop target is inside a void node, move it into either the next or\n    // previous node, depending on which side the `x` and `y` coordinates are\n    // closest to.\n    if (editor.isVoid(node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrevious =\n        node.object === 'inline'\n          ? x - rect.left < rect.left + rect.width - x\n          : y - rect.top < rect.top + rect.height - y\n\n      const range = document.createRange()\n      const move = isPrevious ? 'moveToEndOfNode' : 'moveToStartOfNode'\n      const entry = document[isPrevious ? 'getPreviousText' : 'getNextText'](\n        path\n      )\n\n      if (entry) {\n        return range[move](entry)\n      }\n\n      return null\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    const doc = editor.ownerWindow.document\n    let native\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (doc.caretRangeFromPoint) {\n      native = doc.caretRangeFromPoint(x, y)\n    } else if (doc.caretPositionFromPoint) {\n      const position = doc.caretPositionFromPoint(x, y)\n      native = doc.createRange()\n      native.setStart(position.offsetNode, position.offset)\n      native.setEnd(position.offsetNode, position.offset)\n    } else if (doc.body.createTextRange) {\n      // COMPAT: In IE, `caretRangeFromPoint` and\n      // `caretPositionFromPoint` don't exist. (2018/07/11)\n      native = doc.body.createTextRange()\n\n      try {\n        native.moveToPoint(x, y)\n      } catch (error) {\n        // IE11 will raise an `unspecified error` if `moveToPoint` is\n        // called during a dropEvent.\n        return null\n      }\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = findRange(editor, native)\n    return range\n  }\n\n  /**\n   * Find the path of a native DOM `element` by searching React refs.\n   *\n   * @param {Editor} editor\n   * @param {Element} element\n   * @return {List|Null}\n   */\n\n  function findPath(editor, element) {\n    const content = editor.tmp.contentRef.current\n    let nodeElement = element\n\n    // If element does not have a key, it is likely a string or\n    // mark, return the closest parent Node that can be looked up.\n    if (!nodeElement.hasAttribute(DATA_ATTRS.KEY)) {\n      nodeElement = nodeElement.closest(SELECTORS.KEY)\n    }\n\n    const key =\n      nodeElement == null ? null : nodeElement.getAttribute(DATA_ATTRS.KEY)\n\n    if (!nodeElement || !key) {\n      return null\n    }\n\n    if (nodeElement === content.ref.current) {\n      return PathUtils.create([])\n    }\n\n    const docPath = editor.value.document.getPath(key)\n    if (docPath) return docPath\n\n    const search = (instance, p) => {\n      if (nodeElement === instance) {\n        return p\n      }\n\n      if (!instance.ref) {\n        return null\n      }\n\n      if (nodeElement === instance.ref.current) {\n        return p\n      }\n\n      // If there's no `tmp` then we're at a leaf node without success.\n      if (!instance.tmp) {\n        return null\n      }\n\n      const { nodeRefs } = instance.tmp\n      const keys = Object.keys(nodeRefs)\n\n      for (const i of keys) {\n        const ref = nodeRefs[i]\n        const n = parseInt(i, 10)\n        const path = search(ref, [...p, n])\n\n        if (path) {\n          return path\n        }\n      }\n\n      return null\n    }\n\n    const document = content.tmp.nodeRef.current\n    const path = search(document, [])\n\n    if (!path) {\n      return null\n    }\n\n    return PathUtils.create(path)\n  }\n\n  /**\n   * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n   *\n   * @param {Editor} editor\n   * @param {Element} nativeNode\n   * @param {Number} nativeOffset\n   * @return {Point}\n   */\n\n  function findPoint(editor, nativeNode, nativeOffset) {\n    const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n      nativeNode,\n      nativeOffset\n    )\n\n    const { parentNode } = nearestNode\n    let leafNode = parentNode.closest(SELECTORS.LEAF)\n    let textNode\n    let offset\n    let node\n\n    // Calculate how far into the text node the `nearestNode` is, so that we can\n    // determine what the offset relative to the text node is.\n    if (leafNode) {\n      textNode = leafNode.closest(SELECTORS.TEXT)\n      const range = editor.ownerWindow.document.createRange()\n      range.setStart(textNode, 0)\n      range.setEnd(nearestNode, nearestOffset)\n      const contents = range.cloneContents()\n      const zeroWidths = contents.querySelectorAll(SELECTORS.ZERO_WIDTH)\n\n      Array.from(zeroWidths).forEach(el => {\n        el.parentNode.removeChild(el)\n      })\n\n      // COMPAT: Edge has a bug where Range.prototype.toString() will convert \\n\n      // into \\r\\n. The bug causes a loop when slate-react attempts to reposition\n      // its cursor to match the native position. Use textContent.length instead.\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n      offset = contents.textContent.length\n      node = textNode\n    } else {\n      // For void nodes, the element with the offset key will be a cousin, not an\n      // ancestor, so find it by going down from the nearest void parent.\n      const voidNode = parentNode.closest(SELECTORS.VOID)\n\n      if (!voidNode) {\n        return null\n      }\n\n      leafNode = voidNode.querySelector(SELECTORS.LEAF)\n\n      if (!leafNode) {\n        return null\n      }\n\n      textNode = leafNode.closest(SELECTORS.TEXT)\n      node = leafNode\n      offset = node.textContent.length\n    }\n\n    // COMPAT: If the parent node is a Slate zero-width space, this is because the\n    // text node should have no characters. However, during IME composition the\n    // ASCII characters will be prepended to the zero-width space, so subtract 1\n    // from the offset to account for the zero-width space character.\n    if (\n      offset === node.textContent.length &&\n      parentNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)\n    ) {\n      offset--\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another, the\n    // select event fires twice, once for the old editor's `element` first, and\n    // then afterwards for the correct `element`. (2017/03/03)\n    const path = findPath(editor, textNode)\n\n    if (!path) {\n      return null\n    }\n\n    const { value } = editor\n    const { document } = value\n    const point = document.createPoint({ path, offset })\n    return point\n  }\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   *\n   * @param {Editor} editor\n   * @param {Selection} domRange\n   * @return {Range}\n   */\n\n  function findRange(editor, domRange) {\n    const el = domRange.anchorNode || domRange.startContainer\n\n    if (!el) {\n      return null\n    }\n\n    // If the `domRange` object is a DOM `Range` or `StaticRange` object, change it\n    // into something that looks like a DOM `Selection` instead.\n    if (\n      domRange instanceof editor.ownerWindow.Range ||\n      (editor.ownerWindow.StaticRange && domRange instanceof editor.ownerWindow.StaticRange)\n    ) {\n      domRange = {\n        anchorNode: domRange.startContainer,\n        anchorOffset: domRange.startOffset,\n        focusNode: domRange.endContainer,\n        focusOffset: domRange.endOffset,\n      }\n    }\n\n    const {\n      anchorNode,\n      anchorOffset,\n      focusNode,\n      focusOffset,\n      isCollapsed,\n    } = domRange\n    const { value } = editor\n    const anchor = findPoint(editor, anchorNode, anchorOffset)\n    const focus = isCollapsed\n      ? anchor\n      : findPoint(editor, focusNode, focusOffset)\n\n    if (!anchor || !focus) {\n      return null\n    }\n\n    const { document } = value\n    const range = document.createRange({\n      anchor,\n      focus,\n    })\n\n    return range\n  }\n\n  /**\n   * Find a Slate selection from a DOM selection.\n   *\n   * @param {Editor} editor\n   * @param {Selection} domSelection\n   * @return {Range}\n   */\n\n  function findSelection(editor, domSelection) {\n    const { value } = editor\n    const { document } = value\n\n    // If there are no ranges, the editor was blurred natively.\n    if (!domSelection.rangeCount) {\n      return null\n    }\n\n    // Otherwise, determine the Slate selection from the native one.\n    let range = findRange(editor, domSelection)\n\n    if (!range) {\n      return null\n    }\n\n    const { anchor, focus } = range\n    const anchorText = document.getNode(anchor.path)\n    const focusText = document.getNode(focus.path)\n    const anchorInline = document.getClosestInline(anchor.path)\n    const focusInline = document.getClosestInline(focus.path)\n    const focusBlock = document.getClosestBlock(focus.path)\n    const anchorBlock = document.getClosestBlock(anchor.path)\n\n    // COMPAT: If the anchor point is at the start of a non-void, and the\n    // focus point is inside a void node with an offset that isn't `0`, set\n    // the focus offset to `0`. This is due to void nodes <span>'s being\n    // positioned off screen, resulting in the offset always being greater\n    // than `0`. Since we can't know what it really should be, and since an\n    // offset of `0` is less destructive because it creates a hanging\n    // selection, go with `0`. (2017/09/07)\n    if (\n      anchorBlock &&\n      !editor.isVoid(anchorBlock) &&\n      anchor.offset === 0 &&\n      focusBlock &&\n      editor.isVoid(focusBlock) &&\n      focus.offset !== 0\n    ) {\n      range = range.setFocus(focus.setOffset(0))\n    }\n\n    // COMPAT: If the selection is at the end of a non-void inline node, and\n    // there is a node after it, put it in the node after instead. This\n    // standardizes the behavior, since it's indistinguishable to the user.\n    if (\n      anchorInline &&\n      !editor.isVoid(anchorInline) &&\n      anchor.offset === anchorText.text.length\n    ) {\n      const block = document.getClosestBlock(anchor.path)\n      const depth = document.getDepth(block.key)\n      const relativePath = PathUtils.drop(anchor.path, depth)\n      const [next] = block.texts({ path: relativePath })\n\n      if (next) {\n        const [, nextPath] = next\n        const absolutePath = anchor.path.slice(0, depth).concat(nextPath)\n        range = range.moveAnchorTo(absolutePath, 0)\n      }\n    }\n\n    if (\n      focusInline &&\n      !editor.isVoid(focusInline) &&\n      focus.offset === focusText.text.length\n    ) {\n      const block = document.getClosestBlock(focus.path)\n      const depth = document.getDepth(block.key)\n      const relativePath = PathUtils.drop(focus.path, depth)\n      const [next] = block.texts({ path: relativePath })\n\n      if (next) {\n        const [, nextPath] = next\n        const absolutePath = focus.path.slice(0, depth).concat(nextPath)\n        range = range.moveFocusTo(absolutePath, 0)\n      }\n    }\n\n    let selection = document.createSelection(range)\n\n    // COMPAT: Ensure that the `isFocused` argument is set.\n    selection = selection.setIsFocused(true)\n\n    // COMPAT: Preserve the marks, since we have no way of knowing what the DOM\n    // selection's marks were. They will be cleared automatically by the\n    // `select` command if the selection moves.\n    selection = selection.set('marks', value.selection.marks)\n\n    return selection\n  }\n\n  return {\n    queries: {\n      findDOMNode,\n      findDOMPoint,\n      findDOMRange,\n      findEventRange,\n      findNode,\n      findPath,\n      findPoint,\n      findRange,\n      findSelection,\n    },\n  }\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType === 1 && node.childNodes.length) {\n    const isFirst = offset === 0\n    const direction = isFirst ? 'forward' : 'backward'\n    const index = isFirst ? offset : offset - 1\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType === 1 && node.childNodes.length) {\n      const i = isFirst ? 0 : node.childNodes.length - 1\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isFirst ? 0 : node.textContent.length\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType === 8 ||\n    (child.nodeType === 1 && child.childNodes.length === 0) ||\n    (child.nodeType === 1 && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction === 'forward') i++\n    if (direction === 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default QueriesPlugin\n","/**\n * The transfer types that Slate recognizes.\n *\n * @type {Object}\n */\n\nexport default {\n  FRAGMENT: 'application/x-slate-fragment',\n  HTML: 'text/html',\n  NODE: 'application/x-slate-node',\n  RICH: 'text/rtf',\n  TEXT: 'text/plain',\n}\n","import Base64 from 'slate-base64-serializer'\nimport Plain from 'slate-plain-serializer'\nimport invariant from 'tiny-invariant'\nimport { IS_IE } from 'slate-dev-environment'\nimport { Value } from 'slate'\n\nimport TRANSFER_TYPES from '../constants/transfer-types'\nimport removeAllRanges from './remove-all-ranges'\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\nconst { FRAGMENT, HTML, TEXT } = TRANSFER_TYPES\n\n/**\n * Prepares a Slate document fragment to be copied to the clipboard.\n *\n * @param {Event} event\n * @param {Editor} editor\n */\n\nfunction cloneFragment(event, editor, callback = () => undefined) {\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `cloneFragment` utility takes an `editor` instead of a `value`.'\n  )\n\n  const native = editor.ownerWindow.getSelection()\n  const { value } = editor\n  const { document, fragment, selection } = value\n  const { start, end } = selection\n  const startVoid = document.getClosestVoid(start.path, editor)\n  const endVoid = document.getClosestVoid(end.path, editor)\n\n  // If the selection is collapsed, and it isn't inside a void node, abort.\n  if (native.isCollapsed && !startVoid) return\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const encoded = Base64.serializeNode(fragment)\n  const range = native.getRangeAt(0)\n  let contents = range.cloneContents()\n  let attach = contents.childNodes[0]\n\n  // Make sure attach is a non-empty node, since empty nodes will not get copied\n  contents.childNodes.forEach(node => {\n    if (node.textContent && node.textContent.trim() !== '') {\n      attach = node\n    }\n  })\n\n  // COMPAT: If the end node is a void node, we need to move the end of the\n  // range from the void node's spacer span, to the end of the void node's\n  // content, since the spacer is before void's content in the DOM.\n  if (endVoid) {\n    const r = range.cloneRange()\n    const path = document.getPath(endVoid.key)\n\n    if (path) {\n      const node = editor.findDOMNode(path)\n      r.setEndAfter(node)\n      contents = r.cloneContents()\n    }\n  }\n\n  // COMPAT: If the start node is a void node, we need to attach the encoded\n  // fragment to the void node's content node instead of the spacer, because\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n  // most browsers. (2018/04/27)\n  if (startVoid) {\n    attach = contents.childNodes[0].childNodes[1].firstChild\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  ;[].slice\n    .call(contents.querySelectorAll(SELECTORS.ZERO_WIDTH))\n    .forEach(zw => {\n      const isNewline = zw.getAttribute(DATA_ATTRS.ZERO_WIDTH) === 'n'\n      zw.textContent = isNewline ? '\\n' : ''\n    })\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (attach.nodeType === 3) {\n    const span = editor.ownerWindow.document.createElement('span')\n\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre'\n\n    span.appendChild(attach)\n    contents.appendChild(span)\n    attach = span\n  }\n\n  attach.setAttribute(DATA_ATTRS.FRAGMENT, encoded)\n\n  //  Creates value from only the selected blocks\n  //  Then gets plaintext for clipboard with proper linebreaks for BLOCK elements\n  //  Via Plain serializer\n  const valFromSelection = Value.create({ document: fragment })\n  const plainText = Plain.serialize(valFromSelection)\n\n  // Add the phony content to a div element. This is needed to copy the\n  // contents into the html clipboard register.\n  const div = editor.ownerWindow.document.createElement('div')\n  div.appendChild(contents)\n\n  // For browsers supporting it, we set the clipboard registers manually,\n  // since the result is more predictable.\n  // COMPAT: IE supports the setData method, but only in restricted sense.\n  // IE doesn't support arbitrary MIME types or common ones like 'text/plain';\n  // it only accepts \"Text\" (which gets mapped to 'text/plain') and \"Url\"\n  // (mapped to 'text/url-list'); so, we should only enter block if !IS_IE\n  if (event.clipboardData && event.clipboardData.setData && !IS_IE) {\n    event.preventDefault()\n    event.clipboardData.setData(TEXT, plainText)\n    event.clipboardData.setData(FRAGMENT, encoded)\n    event.clipboardData.setData(HTML, div.innerHTML)\n    callback()\n    return\n  }\n\n  // COMPAT: For browser that don't support the Clipboard API's setData method,\n  // we must rely on the browser to natively copy what's selected.\n  // So we add the div (containing our content) to the DOM, and select it.\n  const editorEl = event.target.closest(SELECTORS.EDITOR)\n  div.setAttribute('contenteditable', true)\n  div.style.position = 'absolute'\n  div.style.left = '-9999px'\n  editorEl.appendChild(div)\n  native.selectAllChildren(div)\n\n  // Revert to the previous selection right after copying.\n  editor.ownerWindow.requestAnimationFrame(() => {\n    editorEl.removeChild(div)\n    removeAllRanges(native)\n    native.addRange(range)\n    callback()\n  })\n}\n\nexport default cloneFragment\n","import Base64 from 'slate-base64-serializer'\nimport { IS_IE } from 'slate-dev-environment'\n\nimport TRANSFER_TYPES from '../constants/transfer-types'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Transfer types.\n *\n * @type {String}\n */\n\nconst { FRAGMENT, HTML, NODE, RICH, TEXT } = TRANSFER_TYPES\n\n/**\n * Fragment matching regexp for HTML nodes.\n *\n * @type {RegExp}\n */\n\nconst FRAGMENT_MATCHER = / data-slate-fragment=\"([^\\s\"]+)\"/\n\n/**\n * Get the transfer data from an `event`.\n *\n * @param {Event} event\n * @return {Object}\n */\n\nfunction getEventTransfer(event) {\n  // COMPAT: IE 11 doesn't populate nativeEvent with either\n  // dataTransfer or clipboardData. We'll need to use the base event\n  // object (2018/14/6)\n  if (!IS_IE && event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n  let fragment = getType(transfer, FRAGMENT)\n  let node = getType(transfer, NODE)\n  const html = getType(transfer, HTML)\n  const rich = getType(transfer, RICH)\n  let text = getType(transfer, TEXT)\n  let files\n\n  // If there isn't a fragment, but there is HTML, check to see if the HTML is\n  // actually an encoded fragment.\n  if (!fragment && html && ~html.indexOf(` ${DATA_ATTRS.FRAGMENT}=\"`)) {\n    const matches = FRAGMENT_MATCHER.exec(html)\n    const [full, encoded] = matches // eslint-disable-line no-unused-vars\n    if (encoded) fragment = encoded\n  }\n\n  // COMPAT: Edge doesn't handle custom data types\n  // These will be embedded in text/plain in this case (2017/7/12)\n  if (text) {\n    const embeddedTypes = getEmbeddedTypes(text)\n\n    if (embeddedTypes[FRAGMENT]) fragment = embeddedTypes[FRAGMENT]\n    if (embeddedTypes[NODE]) node = embeddedTypes[NODE]\n    if (embeddedTypes[TEXT]) text = embeddedTypes[TEXT]\n  }\n\n  // Decode a fragment or node if they exist.\n  if (fragment) fragment = Base64.deserializeNode(fragment)\n  if (node) node = Base64.deserializeNode(node)\n\n  // COMPAT: Edge sometimes throws 'NotSupportedError'\n  // when accessing `transfer.items` (2017/7/12)\n  try {\n    // Get and normalize files if they exist.\n    if (transfer.items && transfer.items.length) {\n      files = Array.from(transfer.items)\n        .map(item => (item.kind === 'file' ? item.getAsFile() : null))\n        .filter(exists => exists)\n    } else if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  } catch (err) {\n    if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  }\n\n  // Determine the type of the data.\n  const data = { files, fragment, html, node, rich, text }\n  data.type = getTransferType(data)\n  return data\n}\n\n/**\n * Takes text input, checks whether contains embedded data\n * and returns object with original text +/- additional data\n *\n * @param {String} text\n * @return {Object}\n */\n\nfunction getEmbeddedTypes(text) {\n  const prefix = 'SLATE-DATA-EMBED::'\n\n  if (text.substring(0, prefix.length) !== prefix) {\n    return { TEXT: text }\n  }\n\n  // Attempt to parse, if fails then just standard text/plain\n  // Otherwise, already had data embedded\n  try {\n    return JSON.parse(text.substring(prefix.length))\n  } catch (err) {\n    throw new Error('Unable to parse custom Slate drag event data.')\n  }\n}\n\n/**\n * Get the type of a transfer from its `data`.\n *\n * @param {Object} data\n * @return {String}\n */\n\nfunction getTransferType(data) {\n  if (data.fragment) return 'fragment'\n  if (data.node) return 'node'\n\n  // COMPAT: Microsoft Word adds an image of the selected text to the data.\n  // Since files are preferred over HTML or text, this would cause the type to\n  // be considered `files`. But it also adds rich text data so we can check\n  // for that and properly set the type to `html` or `text`. (2016/11/21)\n  if (data.rich && data.html) return 'html'\n  if (data.rich && data.text) return 'text'\n\n  if (data.files && data.files.length) return 'files'\n  if (data.html) return 'html'\n  if (data.text) return 'text'\n  return 'unknown'\n}\n\n/**\n * Get one of types `TYPES.FRAGMENT`, `TYPES.NODE`, `text/html`, `text/rtf` or\n * `text/plain` from transfers's `data` if possible, otherwise return null.\n *\n * @param {Object} transfer\n * @param {String} type\n * @return {String}\n */\n\nfunction getType(transfer, type) {\n  if (!transfer.types || !transfer.types.length) {\n    // COMPAT: In IE 11, there is no `types` field but `getData('Text')`\n    // is supported`. (2017/06/23)\n    return type === TEXT ? transfer.getData('Text') || null : null\n  }\n\n  // COMPAT: In Edge, transfer.types doesn't respond to `indexOf`. (2017/10/25)\n  const types = Array.from(transfer.types)\n\n  return types.indexOf(type) !== -1 ? transfer.getData(type) || null : null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventTransfer\n","import TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * The default plain text transfer type.\n *\n * @type {String}\n */\n\nconst { TEXT } = TRANSFER_TYPES\n\n/**\n * Set data with `type` and `content` on an `event`.\n *\n * COMPAT: In Edge, custom types throw errors, so embed all non-standard\n * types in text/plain compound object. (2017/7/12)\n *\n * @param {Event} event\n * @param {String} type\n * @param {String} content\n */\n\nfunction setEventTransfer(event, type, content) {\n  const mime = TRANSFER_TYPES[type.toUpperCase()]\n\n  if (!mime) {\n    throw new Error(`Cannot set unknown transfer type \"${mime}\".`)\n  }\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n\n  try {\n    transfer.setData(mime, content)\n    // COMPAT: Safari needs to have the 'text' (and not 'text/plain') value in dataTransfer\n    // to display the cursor while dragging internally.\n    transfer.setData('text', transfer.getData('text'))\n  } catch (err) {\n    const prefix = 'SLATE-DATA-EMBED::'\n    const text = transfer.getData(TEXT)\n    let obj = {}\n\n    // If the existing plain text data is prefixed, it's Slate JSON data.\n    if (text.substring(0, prefix.length) === prefix) {\n      try {\n        obj = JSON.parse(text.substring(prefix.length))\n      } catch (e) {\n        throw new Error(\n          'Failed to parse Slate data from `DataTransfer` object.'\n        )\n      }\n    } else {\n      // Otherwise, it's just set it as is.\n      obj[TEXT] = text\n    }\n\n    obj[mime] = content\n    const string = `${prefix}${JSON.stringify(obj)}`\n    transfer.setData(TEXT, string)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default setEventTransfer\n","import Base64 from 'slate-base64-serializer'\nimport Debug from 'debug'\nimport Hotkeys from 'slate-hotkeys'\nimport Plain from 'slate-plain-serializer'\nimport getWindow from 'get-window'\nimport { IS_IOS, IS_IE, IS_EDGE } from 'slate-dev-environment'\n\nimport cloneFragment from '../../utils/clone-fragment'\nimport getEventTransfer from '../../utils/get-event-transfer'\nimport setEventTransfer from '../../utils/set-event-transfer'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:after')\n\n/**\n * A plugin that adds the \"after\" browser-specific logic to the editor.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction AfterPlugin(options = {}) {\n  let isDraggingInternally = null\n  let isMouseDown = false\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBeforeInput(event, editor, next) {\n    const { value } = editor\n\n    // Otherwise, we can use the information in the `beforeinput` event to\n    // figure out the exact change that will occur, and prevent it.\n    const [targetRange] = event.getTargetRanges()\n    if (!targetRange) return next()\n\n    debug('onBeforeInput', { event })\n\n    event.preventDefault()\n\n    const { document, selection } = value\n    const range = editor.findRange(targetRange)\n\n    switch (event.inputType) {\n      case 'deleteByDrag':\n      case 'deleteByCut':\n      case 'deleteContent':\n      case 'deleteContentBackward':\n      case 'deleteContentForward': {\n        editor.deleteAtRange(range)\n        break\n      }\n\n      case 'deleteWordBackward': {\n        editor.deleteWordBackwardAtRange(range)\n        break\n      }\n\n      case 'deleteWordForward': {\n        editor.deleteWordForwardAtRange(range)\n        break\n      }\n\n      case 'deleteSoftLineBackward':\n      case 'deleteHardLineBackward': {\n        editor.deleteLineBackwardAtRange(range)\n        break\n      }\n\n      case 'deleteSoftLineForward':\n      case 'deleteHardLineForward': {\n        editor.deleteLineForwardAtRange(range)\n        break\n      }\n\n      case 'insertLineBreak':\n      case 'insertParagraph': {\n        const hasVoidParent = document.hasVoidParent(\n          selection.start.path,\n          editor\n        )\n\n        if (hasVoidParent) {\n          editor.moveToStartOfNextText()\n        } else {\n          editor.splitBlockAtRange(range)\n        }\n\n        break\n      }\n\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        // COMPAT: `data` should have the text for the `insertText` input type\n        // and `dataTransfer` should have the text for the\n        // `insertReplacementText` input type, but Safari uses `insertText` for\n        // spell check replacements and sets `data` to `null`. (2018/08/09)\n        const text =\n          event.data == null\n            ? event.dataTransfer.getData('text/plain')\n            : event.data\n\n        if (text == null) break\n\n        editor.insertTextAtRange(range, text, selection.marks)\n\n        // If the text was successfully inserted, and the selection had marks\n        // on it, unset the selection's marks.\n        if (selection.marks && value.document !== editor.value.document) {\n          editor.select({ marks: null })\n        }\n\n        break\n      }\n    }\n\n    next()\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBlur(event, editor, next) {\n    debug('onBlur', { event })\n    editor.blur()\n    next()\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onClick(event, editor, next) {\n    if (editor.readOnly) return next()\n\n    const { value } = editor\n    const { document } = value\n    const path = editor.findPath(event.target)\n    if (!path) return next()\n\n    debug('onClick', { event })\n\n    const node = document.getNode(path)\n    const ancestors = document.getAncestors(path)\n    const isVoid =\n      node && (editor.isVoid(node) || ancestors.some(a => editor.isVoid(a)))\n\n    if (isVoid) {\n      // COMPAT: In Chrome & Safari, selections that are at the zero offset of\n      // an inline node will be automatically replaced to be at the last offset\n      // of a previous inline node, which screws us up, so we always want to set\n      // it to the end of the node. (2016/11/29)\n      editor.focus().moveToEndOfNode(node)\n    }\n\n    next()\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCopy(event, editor, next) {\n    debug('onCopy', { event })\n    cloneFragment(event, editor)\n    next()\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCut(event, editor, next) {\n    debug('onCut', { event })\n\n    // Once the fake cut content has successfully been added to the clipboard,\n    // delete the content in the current selection.\n    cloneFragment(event, editor, () => {\n      // If user cuts a void block node or a void inline node,\n      // manually removes it since selection is collapsed in this case.\n      const { value } = editor\n      const { document, selection } = value\n      const { end, isCollapsed } = selection\n      let voidPath\n\n      if (isCollapsed) {\n        for (const [node, path] of document.ancestors(end.path)) {\n          if (editor.isVoid(node)) {\n            voidPath = path\n            break\n          }\n        }\n      }\n\n      if (voidPath) {\n        editor.removeNodeByKey(voidPath)\n      } else {\n        editor.delete()\n      }\n    })\n\n    next()\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragEnd(event, editor, next) {\n    debug('onDragEnd', { event })\n    isDraggingInternally = null\n    next()\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragStart(event, editor, next) {\n    debug('onDragStart', { event })\n\n    isDraggingInternally = true\n\n    const { value } = editor\n    const { document } = value\n    const path = editor.findPath(event.target)\n    const node = document.getNode(path)\n    const ancestors = document.getAncestors(path)\n    const isVoid =\n      node && (editor.isVoid(node) || ancestors.some(a => editor.isVoid(a)))\n    const selectionIncludesNode = value.blocks.some(block => block === node)\n\n    // If a void block is dragged and is not selected, select it (necessary for local drags).\n    if (isVoid && !selectionIncludesNode) {\n      editor.moveToRangeOfNode(node)\n    }\n\n    const fragment = editor.value.fragment\n    const encoded = Base64.serializeNode(fragment)\n    setEventTransfer(event, 'fragment', encoded)\n    next()\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDrop(event, editor, next) {\n    const { value } = editor\n    const { document, selection } = value\n    const window = getWindow(event.target)\n    const target = editor.findEventRange(event)\n\n    if (!target) {\n      return next()\n    }\n\n    debug('onDrop', { event })\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    editor.focus()\n\n    // COMPAT: React's onSelect event breaks after an onDrop event\n    // has fired in a node: https://github.com/facebook/react/issues/11379.\n    // Until this is fixed in React, we dispatch a mouseup event on that\n    // DOM node, since that will make it go back to normal.\n    const el = editor.findDOMNode(target.focus.path)\n\n    if (el) {\n      el.dispatchEvent(\n        new MouseEvent('mouseup', {\n          view: window,\n          bubbles: true,\n          cancelable: true,\n        })\n      )\n    }\n\n    const draggedRange = selection\n\n    editor.select(target)\n\n    if (isDraggingInternally) {\n      editor.deleteAtRange(draggedRange)\n    }\n\n    if (type === 'text' || type === 'html') {\n      const { anchor } = target\n      let hasVoidParent = document.hasVoidParent(anchor.path, editor)\n\n      if (hasVoidParent) {\n        let p = anchor.path\n        let n = document.getNode(anchor.path)\n\n        while (hasVoidParent) {\n          const [nxt] = document.texts({ path: p })\n\n          if (!nxt) {\n            break\n          }\n\n          ;[n, p] = nxt\n          hasVoidParent = document.hasVoidParent(p, editor)\n        }\n\n        if (n) editor.moveToStartOfNode(n)\n      }\n\n      if (text) {\n        text.split('\\n').forEach((line, i) => {\n          if (i > 0) editor.splitBlock()\n          editor.insertText(line)\n        })\n      }\n    }\n\n    if (type === 'fragment') {\n      editor.insertFragment(fragment)\n    }\n\n    next()\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onFocus(event, editor, next) {\n    debug('onFocus', { event })\n\n    // COMPAT: If the focus event is a mouse-based one, it will be shortly\n    // followed by a `selectionchange`, so we need to deselect here to prevent\n    // the old selection from being set by the `updateSelection` of `<Content>`,\n    // preventing the `selectionchange` from firing. (2018/11/07)\n    if (isMouseDown && !IS_IE && !IS_EDGE) {\n      editor.deselect().focus()\n    } else {\n      editor.focus()\n    }\n\n    next()\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onInput(event, editor, next) {\n    debug('onInput')\n\n    const domSelection = editor.ownerWindow.getSelection()\n    const selection = editor.findSelection(domSelection)\n\n    if (selection) {\n      editor.select(selection)\n    } else {\n      editor.blur()\n    }\n\n    // prettier-ignore\n    if (window.ENABLE_SLATE_LOGGING) console.log('    flush selAfterOnInput:', JSON.stringify(editor.value.selection.toJSON()))\n\n    const { anchorNode } = domSelection\n    editor.reconcileDOMNode(anchorNode)\n\n    // prettier-ignore\n    if (window.ENABLE_SLATE_LOGGING) console.log('    flush selAfterReconci:', JSON.stringify(editor.value.selection.toJSON()))\n    // prettier-ignore\n    if (window.ENABLE_SLATE_LOGGING) console.log(`    editor: len: ${editor.value.document.text.length} selSlate: ${editor.value.selection.anchor.offset} selNative: ${editor.ownerWindow.getSelection().anchorOffset} document: ${JSON.stringify(editor.value.document.toJSON())}`)\n\n    next()\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onKeyDown(event, editor, next) {\n    debug('onKeyDown', { event })\n\n    const { value } = editor\n    const { document, selection } = value\n    const { start } = selection\n\n    const selectedBlock = document.getClosestBlock(start.path)\n    const isRtl =\n      selectedBlock != null && selectedBlock.getTextDirection() === 'rtl'\n\n    if (Hotkeys.isDeleteBackward(event) && !IS_IOS) {\n      return editor.deleteCharBackward()\n    }\n\n    if (Hotkeys.isDeleteForward(event) && !IS_IOS) {\n      return editor.deleteCharForward()\n    }\n\n    if (Hotkeys.isDeleteLineBackward(event)) {\n      return editor.deleteLineBackward()\n    }\n\n    if (Hotkeys.isDeleteLineForward(event)) {\n      return editor.deleteLineForward()\n    }\n\n    if (Hotkeys.isDeleteWordBackward(event)) {\n      return editor.deleteWordBackward()\n    }\n\n    if (Hotkeys.isDeleteWordForward(event)) {\n      return editor.deleteWordForward()\n    }\n\n    if (Hotkeys.isRedo(event)) {\n      return editor.redo()\n    }\n\n    if (Hotkeys.isUndo(event)) {\n      return editor.undo()\n    }\n\n    // COMPAT: Certain browsers don't handle the selection updates properly. In\n    // Chrome, the selection isn't properly extended. And in Firefox, the\n    // selection isn't properly collapsed. (2017/10/17)\n    if (Hotkeys.isMoveLineBackward(event)) {\n      event.preventDefault()\n      return isRtl ? editor.moveToEndOfBlock() : editor.moveToStartOfBlock()\n    }\n\n    if (Hotkeys.isMoveLineForward(event)) {\n      event.preventDefault()\n      return isRtl ? editor.moveToStartOfBlock() : editor.moveToEndOfBlock()\n    }\n\n    if (Hotkeys.isExtendLineBackward(event)) {\n      event.preventDefault()\n      return isRtl\n        ? editor.moveFocusToEndOfBlock()\n        : editor.moveFocusToStartOfBlock()\n    }\n\n    if (Hotkeys.isExtendLineForward(event)) {\n      event.preventDefault()\n      return isRtl\n        ? editor.moveFocusToStartOfBlock()\n        : editor.moveFocusToEndOfBlock()\n    }\n\n    // COMPAT: If a void node is selected, or a zero-width text node adjacent to\n    // an inline is selected, we need to handle these hotkeys manually because\n    // browsers won't know what to do.\n    if (Hotkeys.isMoveBackward(event)) {\n      event.preventDefault()\n\n      if (!selection.isCollapsed) {\n        return isRtl ? editor.moveToEnd() : editor.moveToStart()\n      }\n\n      return isRtl ? editor.moveForward() : editor.moveBackward()\n    }\n\n    if (Hotkeys.isMoveForward(event)) {\n      event.preventDefault()\n\n      if (!selection.isCollapsed) {\n        return isRtl ? editor.moveToStart() : editor.moveToEnd()\n      }\n\n      return isRtl ? editor.moveBackward() : editor.moveForward()\n    }\n\n    if (Hotkeys.isMoveWordBackward(event)) {\n      event.preventDefault()\n      return isRtl ? editor.moveWordForward() : editor.moveWordBackward()\n    }\n\n    if (Hotkeys.isMoveWordForward(event)) {\n      event.preventDefault()\n      return isRtl ? editor.moveWordBackward() : editor.moveWordForward()\n    }\n\n    if (\n      (!isRtl && Hotkeys.isExtendBackward(event)) ||\n      (isRtl && Hotkeys.isExtendForward(event))\n    ) {\n      event.preventDefault()\n      return editor.moveFocusBackward()\n    }\n\n    if (\n      (!isRtl && Hotkeys.isExtendForward(event)) ||\n      (isRtl && Hotkeys.isExtendBackward(event))\n    ) {\n      event.preventDefault()\n      return editor.moveFocusForward()\n    }\n\n    next()\n  }\n\n  /**\n   * On mouse down.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onMouseDown(event, editor, next) {\n    debug('onMouseDown', { event })\n    isMouseDown = true\n    next()\n  }\n\n  /**\n   * On mouse up.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onMouseUp(event, editor, next) {\n    debug('onMouseUp', { event })\n    isMouseDown = false\n    next()\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onPaste(event, editor, next) {\n    debug('onPaste', { event })\n\n    const { value } = editor\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    if (type === 'fragment') {\n      editor.insertFragment(fragment)\n    }\n\n    if (type === 'text' || type === 'html') {\n      if (!text) return next()\n      const { document, selection, startBlock } = value\n      if (editor.isVoid(startBlock)) return next()\n\n      const defaultBlock = startBlock\n      const defaultMarks = document.getInsertMarksAtRange(selection)\n      const frag = Plain.deserialize(text, { defaultBlock, defaultMarks })\n        .document\n      editor.insertFragment(frag)\n    }\n\n    next()\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onSelect(event, editor, next) {\n    debug('onSelect', { event })\n    const domSelection = editor.ownerWindow.getSelection()\n    const selection = editor.findSelection(domSelection)\n    // prettier-ignore\n    if (window.ENABLE_SLATE_LOGGING && domSelection && editor.value.selection.anchor && selection && selection.anchor) console.log(`!! onSelect domOffset:${domSelection.anchorOffset} oldSlate: ${editor.value.selection.anchor.offset} newSlate: ${selection.anchor.offset}`)\n\n    if (selection) {\n      editor.select(selection)\n    } else {\n      editor.blur()\n    }\n\n    // COMPAT: reset the `isMouseDown` state here in case a `mouseup` event\n    // happens outside the editor. This is needed for `onFocus` handling.\n    isMouseDown = false\n\n    next()\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onMouseDown,\n    onMouseUp,\n    onPaste,\n    onSelect,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default AfterPlugin\n","import { Node } from 'slate'\n\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Find the DOM node for a `key`.\n *\n * @param {String|Node} key\n * @param {Window} win (optional)\n * @return {Element}\n */\n\nfunction findDOMNode(key, win = window) {\n  // warning(\n  //   false,\n  //   'As of slate-react@0.22 the `findDOMNode(key)` helper is deprecated in favor of `editor.findDOMNode(path)`.'\n  // )\n\n  if (Node.isNode(key)) {\n    key = key.key\n  }\n\n  const el = win.document.querySelector(`[${DATA_ATTRS.KEY}=\"${key}\"]`)\n\n  if (!el) {\n    throw new Error(\n      `Unable to find a DOM node for \"${key}\". This is often because of forgetting to add \\`props.attributes\\` to a custom component.`\n    )\n  }\n\n  return el\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMNode\n","import Debug from 'debug'\nimport { Range } from 'slate'\nimport Hotkeys from 'slate-hotkeys'\nimport {\n  IS_FIREFOX,\n  IS_IE,\n  IS_IOS,\n  HAS_INPUT_EVENTS_LEVEL_2,\n} from 'slate-dev-environment'\n\nimport DATA_ATTRS from '../../constants/data-attributes'\nimport SELECTORS from '../../constants/selectors'\nimport sanitizeDomOnError from '../../utils/sanitize-dom-on-error'\nimport safelyGetParentKeyNode from '../../utils/safely-get-parent-key-node'\nimport findDomNode from '../../utils/find-dom-node'\nimport { reconcileDOMNode } from '../../plugins/react/commands'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:before')\n\n/**\n * A plugin that adds the \"before\" browser-specific logic to the editor.\n *\n * @return {Object}\n */\n\nfunction BeforePlugin() {\n  let activeElement = null\n  let isComposing = false\n  let isCopying = false\n  let isDragging = false\n  let isUserActionPerformed = false\n\n  let nextNativeOperation = null\n  let currentlySelectedCompositionNode = null\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBeforeInput(event, editor, next) {\n    editor.ensureSelection()\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`!! onBeforeInput with data:${JSON.stringify(event.data)} inputType:${event.inputType} has2:${HAS_INPUT_EVENTS_LEVEL_2} isSynthetic:${!!event.nativeEvent}`)\n\n    // If the user has started a composition for something like a chinese character\n    // then wait to modify slate's AST and wait to force a react render until the composition is done.\n    if (checkIsComposing()) return\n\n    const isSynthetic = !!event.nativeEvent\n    if (editor.readOnly) return\n    isUserActionPerformed = true\n\n    // COMPAT: If the browser supports Input Events Level 2, we will have\n    // attached a custom handler for the real `beforeinput` events, instead of\n    // allowing React's synthetic polyfill, so we need to ignore synthetics.\n    if (isSynthetic && HAS_INPUT_EVENTS_LEVEL_2) return\n\n    // If the event is synthetic, it's React's polyfill of `beforeinput` that\n    // isn't a true `beforeinput` event with meaningful information. It only\n    // gets triggered for character insertions, so we can just insert directly.\n    // Single character inserts can be handled natively. Allows native rendering\n    // which preserves the native browser spell check handling.\n    if (isSynthetic) {\n      const isCollapsed = editor.value.selection.isCollapsed\n\n      if (!isCollapsed) {\n        editor.delete()\n      }\n\n      const inputText = (event.data || '')\n        .replace(/\\n\\r/g, '\\n')\n        .replace(/\\r/g, '\\n')\n      const hasNewLines = inputText.indexOf('\\n') >= 0\n\n      if (isCollapsed && !hasNewLines) {\n        saveCurrentNativeNode(editor)\n      } else {\n        event.preventDefault()\n\n        if (!hasNewLines) {\n          editor.insertText(event.data, null, false)\n        } else {\n          const chunks = inputText.split('\\n')\n\n          chunks.map((text, i) => {\n            if (text.length !== 0) {\n              /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    insert: |${JSON.stringify(text)}|`)\n              editor.insertText(text, null, false)\n            }\n\n            if (i !== chunks.length - 1) {\n              /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('    inserting line break')\n              editor.splitBlock()\n            }\n          })\n        }\n      }\n    } else {\n      debug('onBeforeInput', { event })\n      next()\n    }\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBlur(event, editor, next) {\n    if (isCopying) return\n    if (editor.readOnly) return\n\n    const { relatedTarget } = event\n\n    // COMPAT: If the current `activeElement` is still the previous one, this is\n    // due to the window being blurred when the tab itself becomes unfocused, so\n    // we want to abort early to allow to editor to stay focused when the tab\n    // becomes focused again.\n    if (activeElement === editor.ownerWindow.document.activeElement) return\n\n    // COMPAT: The `relatedTarget` can be null when the new focus target is not\n    // a \"focusable\" element (eg. a `<div>` without `tabindex` set).\n    if (relatedTarget) {\n      const el = editor.findDOMNode([])\n\n      // COMPAT: The event should be ignored if the focus is returning to the\n      // editor from an embedded editable element (eg. an <input> element inside\n      // a void node).\n      if (relatedTarget === el) return\n\n      // COMPAT: The event should be ignored if the focus is moving from the\n      // editor to inside a void node's spacer element.\n      if (relatedTarget.hasAttribute(DATA_ATTRS.SPACER)) return\n\n      // COMPAT: The event should be ignored if the focus is moving to a non-\n      // editable section of an element that isn't a void node (eg. a list item\n      // of the check list example).\n      const node = editor.findNode(relatedTarget)\n\n      if (\n        el != null &&\n        el.contains(relatedTarget) &&\n        node &&\n        !editor.isVoid(node)\n      ) {\n        return\n      }\n    }\n\n    debug('onBlur', { event })\n    next()\n  }\n\n  /**\n   * On composition end.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCompositionEnd(event, editor, next) {\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`!! onCompositionEnd isComposing:${isComposing}`)\n\n    isUserActionPerformed = true\n    isComposing = false\n\n    // Since we may have skipped some input events during the composition, once it is over\n    // we need to manually call flush to sync the dom to the slate AST\n    saveCurrentlySelectedCompositionNode(editor)\n    saveCurrentNativeNode(editor)\n    syncDomToSlateAst(editor)\n\n    debug('onCompositionEnd', { event })\n    next()\n  }\n\n  function onCompositionUpdate(event, editor) {\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`!! onCompositionUpdate isComposing:${isComposing}`)\n    isComposing = true\n    saveCurrentlySelectedCompositionNode(editor)\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onClick(event, editor, next) {\n    debug('onClick', { event })\n    isUserActionPerformed = true\n    next()\n  }\n\n  /**\n   * On composition start.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCompositionStart(event, editor, next) {\n    editor.ensureSelection()\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`!! onCompositionStart isComposing:${isComposing} isCollapsed:${editor.value.selection.isCollapsed}`)\n\n    isComposing = true\n\n    const { value } = editor\n    const { selection } = value\n    isUserActionPerformed = true\n\n    if (!selection.isCollapsed) {\n      // https://github.com/ianstormtaylor/slate/issues/1879\n      // When composition starts and the current selection is not collapsed, the\n      // second composition key-down would drop the text wrapping <spans> which\n      // resulted on crash in content.updateSelection after composition ends\n      // (because it cannot find <span> nodes in DOM). This is a workaround that\n      // erases selection as soon as composition starts and preventing <spans>\n      // to be dropped.\n      editor.delete()\n    }\n\n    saveCurrentlySelectedCompositionNode(editor)\n    saveCurrentNativeNode(editor)\n\n    debug('onCompositionStart', { event })\n    next()\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCopy(event, editor, next) {\n    isCopying = true\n    editor.ownerWindow.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCopy', { event })\n    next()\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCut(event, editor, next) {\n    if (editor.readOnly) return\n\n    isCopying = true\n    editor.ownerWindow.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCut', { event })\n    next()\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragEnd(event, editor, next) {\n    isDragging = false\n    debug('onDragEnd', { event })\n    next()\n  }\n\n  /**\n   * On drag enter.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragEnter(event, editor, next) {\n    debug('onDragEnter', { event })\n    next()\n  }\n\n  /**\n   * On drag exit.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragExit(event, editor, next) {\n    debug('onDragExit', { event })\n    next()\n  }\n\n  /**\n   * On drag leave.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragLeave(event, editor, next) {\n    debug('onDragLeave', { event })\n    next()\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragOver(event, editor, next) {\n    // If the target is inside a void node, and only in this case,\n    // call `preventDefault` to signal that drops are allowed.\n    // When the target is editable, dropping is already allowed by\n    // default, and calling `preventDefault` hides the cursor.\n    const node = editor.findNode(event.target)\n\n    if (!node || editor.isVoid(node)) {\n      event.preventDefault()\n    }\n\n    // COMPAT: IE won't call onDrop on contentEditables unless the\n    // default dragOver is prevented:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/913982/\n    // (2018/07/11)\n    if (IS_IE) {\n      event.preventDefault()\n    }\n\n    // If a drag is already in progress, don't do this again.\n    if (!isDragging) {\n      isDragging = true\n\n      // COMPAT: IE will raise an `unspecified error` if dropEffect is\n      // set. (2018/07/11)\n      if (!IS_IE) {\n        event.nativeEvent.dataTransfer.dropEffect = 'move'\n      }\n    }\n\n    debug('onDragOver', { event })\n    next()\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragStart(event, editor, next) {\n    isDragging = true\n    debug('onDragStart', { event })\n    next()\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDrop(event, editor, next) {\n    if (editor.readOnly) return\n    isUserActionPerformed = true\n\n    // Prevent default so the DOM's value isn't corrupted.\n    event.preventDefault()\n\n    debug('onDrop', { event })\n    next()\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onFocus(event, editor, next) {\n    if (isCopying) return\n    if (editor.readOnly) return\n\n    const el = editor.findDOMNode([])\n\n    // Save the new `activeElement`.\n    activeElement = editor.ownerWindow.document.activeElement\n\n    // COMPAT: If the editor has nested editable elements, the focus can go to\n    // those elements. In Firefox, this must be prevented because it results in\n    // issues with keyboard navigation. (2017/03/30)\n    if (IS_FIREFOX && event != null && el != null && event.target !== el) {\n      el.focus()\n      return\n    }\n\n    debug('onFocus', { event })\n    next()\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onInput(event, editor, next) {\n    editor.ensureSelection()\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`!! onInput isComposing:${isComposing} hasOp:${!!nextNativeOperation}`)\n\n    if (checkIsComposing()) {\n      // Safari is broken :(\n      if (HAS_INPUT_EVENTS_LEVEL_2) return\n\n      // During compositions we _have_ to scan the dom to see what has changed, we cannot ever rely on onBeforeInput\n      // modifying the AST since that will change the dom text node!\n      saveCurrentNativeNode(editor)\n      syncDomToSlateAst(editor)\n      return\n    }\n\n    // The input event fires after the browser has modified the dom\n    // At this point we can read the dom to see what the browser did and import that change into slate's AST\n    if (syncDomToSlateAst(editor)) {\n      return\n    }\n\n    if (editor.value.selection.isBlurred) return\n    isUserActionPerformed = true\n    debug('onInput', { event })\n    next()\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onKeyDown(event, editor, next) {\n    if (editor.readOnly) return\n    editor.ensureSelection()\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`!! onKeyDown isComposing:${isComposing} hasOp:${!!nextNativeOperation} mods:${event.ctrlKey ? 'ctrl-' : ''}${event.altKey ? 'alt-' : ''}${event.shiftKey ? 'shift-' : ''}${event.metaKey ? 'meta-' : ''} key:${event.key} which:${event.which}`)\n\n    // When composing, we need to prevent all hotkeys from executing while\n    // typing. However, certain characters also move the selection before\n    // we're able to handle it, so prevent their default behavior.\n    if (checkIsComposing()) {\n      if (Hotkeys.isCompose(event)) event.preventDefault()\n      return\n    }\n\n    // Optimization: Bail out if none of the keys we care about were pressed!\n    if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.shiftKey &&\n      !event.metaKey &&\n      event.key != null\n    ) {\n      switch (event.key.toLowerCase()) {\n        case 'arrowdown':\n        case 'arrowleft':\n        case 'arrowright':\n        case 'arrowup':\n        case 'pageup':\n        case 'pagedown':\n        case 'backspace':\n        case 'delete':\n        case 'insert':\n        case 'home':\n        case 'end':\n        case 'enter':\n        case 'tab':\n        case 'space':\n          break\n\n        default:\n          return\n      }\n    }\n\n    // Certain hotkeys have native editing behaviors in `contenteditable`\n    // elements which will editor the DOM and cause our value to be out of sync,\n    // so they need to always be prevented.\n    if (\n      !IS_IOS &&\n      (Hotkeys.isBold(event) ||\n        Hotkeys.isDeleteBackward(event) ||\n        Hotkeys.isDeleteForward(event) ||\n        Hotkeys.isDeleteLineBackward(event) ||\n        Hotkeys.isDeleteLineForward(event) ||\n        Hotkeys.isDeleteWordBackward(event) ||\n        Hotkeys.isDeleteWordForward(event) ||\n        Hotkeys.isItalic(event) ||\n        Hotkeys.isRedo(event) ||\n        // Hotkeys.isSplitBlock(event) ||\n        Hotkeys.isTransposeCharacter(event) ||\n        Hotkeys.isUndo(event))\n    ) {\n      event.preventDefault()\n    }\n\n    isUserActionPerformed = true\n    debug('onKeyDown', { event })\n    next()\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onPaste(event, editor, next) {\n    if (editor.readOnly) return\n    isUserActionPerformed = true\n\n    // Prevent defaults so the DOM state isn't corrupted.\n    event.preventDefault()\n\n    debug('onPaste', { event })\n    next()\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onSelect(event, editor, next) {\n    if (isCopying) return\n    if (editor.readOnly) return\n    if (checkIsComposing() && HAS_INPUT_EVENTS_LEVEL_2) return\n\n    // Save the new `activeElement`.\n    activeElement = editor.ownerWindow.document.activeElement\n    isUserActionPerformed = true\n\n    debug('onSelect', { event })\n    next()\n  }\n\n  function userActionPerformed() {\n    return isUserActionPerformed\n  }\n\n  function clearUserActionPerformed() {\n    isUserActionPerformed = false\n    return null\n  }\n\n  /**\n   * The job of this function is to look at the dom, see what text is there, and sync that text into slate.\n   * We use this for things like asian language compositions, auto suggest/correct, and mac's accented character input.\n   * Each of these are too complicated to replicate perfectly with the events the browser exposes to us.  Additionally,\n   * the browser relies on us not modifying the text node.  If we touch the text node's content in any way, then the\n   * browser will abort any composition that it has in progress!  So our goal is to let the browser do its things,\n   * avoid touching it or syncing its state at all, and then once it is done, we will sync its state into slate,\n   * which is what this function does.\n   *\n   * A slate AST will look something like this:\n   * document: {\n   *   nodes: [{\n   *     type: 'line',\n   *     nodes: [{key: '42', type: 'text', text: '**foo**'}],\n   *   ]}\n   * }\n   *\n   * The corresponding dom structure will look something like:\n   * <span data-key=42>\n   *   <span decoration=\"syntax\">\n   *     <span data-string=true>**</span>\n   *   </span>\n   *   <span decoration=\"bold\">\n   *     <span data-string=true>foo</span>\n   *   </span>\n   *   <span decoration=\"syntax\">\n   *     <span data-string=true>**</span>\n   *   </span>\n   * </span>\n   *\n   * The important thing to note about the above is that there is a single span tag that corresponds to each Text node\n   * in the AST.  Generally speaking, thatSpanNode.textContent === LeaftAstTextNode.text\n   *\n   * The part where that is not true is zero-width spaces.  Slate needs to force text nodes to be created, and it does\n   * this by creating dom nodes that just have a zero width space in them.  The problem with this is the browser doesn't\n   * know that we don't want them.  So when a user types \"a\" to start, they will only see one character, but in the dom\n   * there are actually two (because the browser didn't remove the zero-width space).  So, we have to do some surgery\n   * on the dom to clean these up and keep them out of the slate AST.\n   */\n\n  function syncDomToSlateAst(editor) {\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('!! syncDomToSlateAst')\n\n    const nodesToIncorporate = nextNativeOperation || []\n    nextNativeOperation = null\n\n    addCurrentlySelectedKeyNode(editor, nodesToIncorporate)\n    if (nodesToIncorporate.length === 0) return false\n\n    const {\n      anchorNode: textNode,\n      anchorOffset: currentOffset,\n    } = editor.ownerWindow.getSelection()\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    textNode: ${textNode.textContent} ${textNode.textContent.length}`)\n\n    // Just in case: Make sure the currently selected node is in the list of nodes we are going to sync\n\n    // Now sync the content of all nodes in the lis tinto our AST\n    let failed = false\n\n    for (const node of nodesToIncorporate) {\n      if (\n        sanitizeDomOnError(editor, node, () => syncNodeToSlateAst(editor, node))\n          .failed\n      ) {\n        failed = true\n      }\n    }\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('    flush selAfterInsert :',JSON.stringify(editor.value.selection.toJSON()))\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    editor: len: ${editor.value.document.text.length} selSlate: ${editor.value.selection.anchor.offset} selNative: ${currentOffset} document: ${JSON.stringify(editor.value.document.toJSON())}`)\n\n    // If any of the syncing above failed, then we can't really do much else here, let's just bail out to avoid\n    // cascading errors.\n    if (failed) return\n\n    // Finally make sure the browser and slate agree on where your selection should be\n    sanitizeDomOnError(editor, textNode, () =>\n      syncSelection(editor, textNode, currentOffset)\n    )\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('    flush selAfterSelect2:',JSON.stringify(editor.value.selection.toJSON()))\n\n    // Last step is more of a sanity thing: Make sure the dom structure and text roughly match what slate things they should!\n    // This is normally called in the after plugin, however if we do that there, it will re-sync the selection, which we\n    // just did above, which wastes about a millisecond.\n    reconcileDOMNode(editor, textNode)\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('    flush selAfterReconci:',JSON.stringify(editor.value.selection.toJSON()))\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    editor: len: ${editor.value.document.text.length} selSlate: ${editor.value.selection.anchor.offset} selNative: ${editor.ownerWindow.getSelection().anchorOffset} document: ${JSON.stringify(editor.value.document.toJSON())}`)\n\n    return true\n  }\n\n  function syncNodeToSlateAst(editor, slateDomSpan) {\n    // Re-read the slate span from the dom, _just in case_ it has been removed from the dom since!\n    const key = slateDomSpan.getAttribute(DATA_ATTRS.KEY)\n    slateDomSpan = findDomNode(key, editor.ownerWindow)\n\n    const path = editor.value.document.getPath(key)\n    const slateAstNode = editor.value.document.getNode(key)\n\n    // Strip any zero-width spaces that slate uses internally.  React will clean these up too, but we are trying to\n    // avoid having to react-render right now\n    sanitizeZeroWidthSpaces(editor, slateDomSpan)\n\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    slateDomSpan: ${slateDomSpan.textContent} ${slateDomSpan.textContent.length}`)\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    slateAstNode: ${slateAstNode.text} ${slateAstNode.text.length}`)\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('    flush selBeforeInsert:',JSON.stringify(editor.value.selection.toJSON()))\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    editor: len: ${editor.value.document.text.length} selSlate: ${editor.value.selection.anchor.offset} selNative: ${editor.ownerWindow.getSelection().anchorOffset} document: ${JSON.stringify(editor.value.document.toJSON())}`)\n\n    // Now grab the full current text content of the slate dom node that represents the full slate AST node\n    // We do need to strip any zero-width spaces though, since slate uses them for decorations and other things,\n    // so they might legitimately need to be in the dom, but should never be in the AST\n    const newTextContent = slateDomSpan.textContent.replace(/[\\uFEFF\\b]/g, '')\n    syncTextToAst(editor, slateAstNode, path, newTextContent)\n  }\n\n  function syncSelection(editor, textNode, currentOffset) {\n    // Now we need to go and update the selection.  First, we modify slate's internal representation of the selection:\n    const newSelectionPosition = Math.min(\n      textNode.textContent.length,\n      currentOffset\n    )\n    // This maps a dom position to a slate position.  Remember above: A single slate node will have lots of child\n    // dom nodes, which means the dom offset is usually going to be much different from what the offset is in the slate\n    // AST\n    const point = editor.findPoint(textNode, newSelectionPosition)\n    if (point == null)\n      throw Error('Unable to translate dom position to slate position!')\n    setSlateSelection(editor, point.path, point.key, point.offset)\n    /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log('    flush selAfterSelect1:',JSON.stringify(editor.value.selection.toJSON()))\n\n    // There's a good chance that slate will do nothing with the update above, partly because we have disabled selection\n    // updates in some cases.  So, let's also force the browser to move the selection to where we want.\n    // (IIRC in some cases slate was also moving the selection back to an old place sometimes, so this fixes that too).\n    setDomSelection(editor, textNode, newSelectionPosition)\n  }\n\n  /**\n   * Intelligently syncs text changes to the slate AST.  If we can determine with confidence that all the user did\n   * was insert a single letter or two, then there's a much faster code path we can take.  If we can't determine that,\n   * then we'll replace the entire text content of the AST node, _but_ it will take an extra 2-3 ms\n   */\n\n  function syncTextToAst(editor, slateAstNode, path, newText) {\n    const oldText = slateAstNode.text\n    if (newText === oldText) return\n\n    const key = slateAstNode.key\n\n    // Look for the number of characters at the start and end of the two pieces of text that exactly match,\n    // position for position.\n    const numStartingCharsSame = commonCharactersAtStart(newText, oldText)\n    const numEndingCharsSame = commonCharactersAtEnd(\n      newText.substring(numStartingCharsSame),\n      oldText.substring(numStartingCharsSame)\n    )\n\n    // Now, if the number of matching characters is the same as the length of the old text, then we know the new\n    // text _only_ contains additions, and those additions start where the matching characters at the start stopped.\n    if (numStartingCharsSame + numEndingCharsSame !== oldText.length) {\n      // There is a deletion somewhere, so let's just replace the whole node's text\n      editor.insertTextAtRange(\n        Range.create({\n          anchor: { path, key, offset: 0 },\n          focus: { path, key, offset: slateAstNode.text.length },\n        }),\n        newText\n      )\n    } else {\n      // We are _just_ inserting characters, so we can do a much faster AST operation!\n      const insertions = newText.substring(\n        numStartingCharsSame,\n        newText.length - numEndingCharsSame\n      )\n\n      editor.controller.fastInsertText(\n        path,\n        numStartingCharsSame,\n        insertions,\n        null\n      )\n    }\n  }\n\n  /** Returns the number of continous characters that exactly match, starting at the beginning of the string */\n\n  function commonCharactersAtStart(left, right) {\n    for (let i = 0; i < left.length && i < right.length; i++) {\n      if (left[i] !== right[i]) return i\n    }\n    return Math.min(left.length, right.length)\n  }\n\n  /** Returns the number of continous characters that exactly match, starting at the end of the string */\n\n  function commonCharactersAtEnd(left, right) {\n    const leftLength = left.length\n    const rightLength = right.length\n\n    for (let i = 0; i < leftLength && i < rightLength; i++) {\n      if (left[leftLength - i - 1] !== right[rightLength - i - 1]) return i\n    }\n    return Math.min(leftLength, rightLength)\n  }\n\n  /** Syncs a new selection position to slate, but only if slate does not already have that position as its value */\n\n  function setSlateSelection(editor, path, key, offset) {\n    const { selection } = editor.value\n\n    if (\n      !selection.isCollapsed ||\n      selection.anchor.key !== key ||\n      selection.anchor.offset !== offset\n    ) {\n      const point = { path, key, offset }\n      editor.select(Range.create({ anchor: point, focus: point }))\n    }\n  }\n\n  /** Syncs a new selection position to the dom, but only if the dom does not already have that position */\n\n  function setDomSelection(editor, textNode, offset) {\n    const selection = editor.ownerWindow.getSelection()\n\n    if (\n      selection == null ||\n      selection.anchorNode !== textNode ||\n      selection.focusNode !== textNode ||\n      selection.anchorOffset !== offset ||\n      selection.focusOffset !== offset\n    ) {\n      selection.collapse(textNode, offset)\n    }\n  }\n\n  /**\n   * Slate has two dom representations for leaf nodes:\n   * <span data-string=true>abc</span>\n   * <span data-zero-width=true></span>\n   * When a node is first created, it starts as the zero-width dom node.  When we let the browser modify it, we will\n   * be left with the zero-width markup, but it now contains more than just a zero-width string.  So, in this case,\n   * we want to strip those attributes.\n   * Additionally, if a node contains anything more than just a zero width string, then we should remove any zero-width\n   * spaces from it if has any.\n   */\n\n  function sanitizeZeroWidthSpaces(editor, slateDomSpan) {\n    const allChildTextNodes = slateDomSpan.querySelectorAll(\n      `${SELECTORS.STRING}, ${SELECTORS.ZERO_WIDTH}`\n    )\n\n    for (const stringNode of allChildTextNodes) {\n      const isStringNode = stringNode.hasAttribute(DATA_ATTRS.STRING)\n      const isZeroWidth = stringNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)\n\n      // This should basically always be true:\n      if (isStringNode || isZeroWidth) {\n        const hasZeroWidthChars = stringNode.textContent.indexOf('\\uFEFF') >= 0\n\n        // A string node with any zero width characters needs to be cleaned\n        // A zero width node with only a zero width character is ok though:\n        if (\n          (isStringNode && hasZeroWidthChars) ||\n          (isZeroWidth && stringNode.textContent !== '\\uFEFF')\n        ) {\n          /* prettier-ignore */ if (window.ENABLE_SLATE_LOGGING) console.log(`    REPLACING ${stringNode.childNodes.length}`)\n\n          // If there's only a single text node here, then we modify it's dom content directly\n          // If there are multiple though, then it's a bit of an unknown situation, so we replace the entire span\n          removeZeroWidths(stringNode)\n\n          stringNode.removeAttribute(DATA_ATTRS.ZERO_WIDTH)\n          stringNode.removeAttribute(DATA_ATTRS.LENGTH)\n        }\n      }\n    }\n  }\n\n  function removeZeroWidths(parent) {\n    eachTextNode(parent, textNode => {\n      while (true) {\n        const pos = textNode.textContent.indexOf('\\uFEFF')\n        if (pos === -1) break\n        textNode.deleteData(pos, 1)\n      }\n    })\n  }\n\n  function eachTextNode(node, cb) {\n    for (const child of node.childNodes) {\n      if (child.nodeType === 1) {\n        eachTextNode(child, cb)\n      } else if (child.nodeType === 3) {\n        cb(child)\n      }\n    }\n  }\n\n  function saveCurrentNativeNode(editor) {\n    if (!nextNativeOperation) {\n      nextNativeOperation = []\n    }\n\n    addCurrentlySelectedKeyNode(editor, nextNativeOperation)\n  }\n\n  function saveCurrentlySelectedCompositionNode(editor) {\n    const selection = editor.ownerWindow.getSelection()\n\n    currentlySelectedCompositionNode =\n      selection == null ? null : selection.anchorNode\n  }\n\n  function checkIsComposing() {\n    // If React has come through and re-rendered the dom, then it may have interrupted a composition, and there\n    // may not have been an onCompositionEnd event.  So if the node that was last selected during the composition\n    // no longer exists in the dom, let's assume the user aborted the composition.\n    if (isComposing) {\n      if (currentlySelectedCompositionNode == null) isComposing = false\n\n      const doc = currentlySelectedCompositionNode.ownerDocument\n\n      if (!doc.body.contains(currentlySelectedCompositionNode)) {\n        console.warn(\n          'Aborting composition because previously selection node is no longer in the dom!'\n        )\n\n        isComposing = false\n      }\n    }\n\n    return isComposing\n  }\n\n  function addCurrentlySelectedKeyNode(editor, keyNodes) {\n    // The node with a data-key property entirely encompasses a single slate AST text node.\n    // It'll have lots of children for the various decorations, but its entire textContent should map\n    // to a single AST node\n    const currentSpan = safelyGetParentKeyNode(editor.ownerWindow.getSelection().anchorNode)\n\n    // Save a reference to the currently selected AST node\n    // Once the browser has modified the dom, we'll use these to figure out what changes were made\n    if (keyNodes.indexOf(currentSpan) === -1) {\n      keyNodes.push(currentSpan)\n    }\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCompositionEnd,\n    onCompositionUpdate,\n    onCompositionStart,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragEnter,\n    onDragExit,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n    queries: {\n      userActionPerformed,\n      isComposing: checkIsComposing,\n    },\n    commands: {\n      clearUserActionPerformed,\n    },\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default BeforePlugin\n","import AfterPlugin from './after'\nimport BeforePlugin from './before'\n\n/**\n * A plugin that adds the browser-specific logic to the editor.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nexport default function DOMPlugin(options = {}) {\n  const { plugins = [] } = options\n  return [BeforePlugin(), ...plugins, AfterPlugin()]\n}\n","function RestoreDOMPlugin() {\n  /**\n   * Makes sure that on the next Content `render` the DOM is restored.\n   * This gets us around issues where the DOM is in a different state than\n   * React's virtual DOM and would crash.\n   *\n   * @param {Editor} editor\n   */\n\n  function restoreDOM(editor) {\n    const tmp = editor.tmp.contentRef.current.tmp\n    tmp.contentKey = tmp.contentKey + 1\n  }\n\n  return {\n    commands: {\n      restoreDOM,\n    },\n  }\n}\n\nexport default RestoreDOMPlugin\n","/**\n * Takes a React Synthetic Event or a DOM Event and turns it into a String that\n * is easy to log. It's succinct and keeps info to a bare minimum.\n *\n * @param {Event} event\n */\n\nexport default function stringifyEvent(event) {\n  const e = event.nativeEvent || event\n\n  switch (e.type) {\n    case 'keydown':\n      return `${e.type} ${JSON.stringify(e.key)}`\n    case 'input':\n    case 'beforeinput':\n    case 'textInput':\n      return `${e.type}:${e.inputType} ${JSON.stringify(e.data)}`\n    default:\n      return e.type\n  }\n}\n","import Debug from 'debug'\nimport EVENT_HANDLERS from '../../constants/event-handlers'\nimport stringifyEvent from './stringify-event'\n\n/**\n * Debug events function.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:events')\n\n/**\n * A plugin that sends short easy to digest debug info about each event to\n * browser.\n *\n * @return {Object}\n */\n\nfunction DebugEventsPlugin() {\n  /**\n   * Plugin Object\n   *\n   * @type {Object}\n   */\n\n  const plugin = {}\n\n  for (const eventName of EVENT_HANDLERS) {\n    plugin[eventName] = function(event, editor, next) {\n      const s = stringifyEvent(event)\n      debug(s)\n      next()\n    }\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default DebugEventsPlugin\n","import Debug from 'debug'\nimport EVENT_HANDLERS from '../../constants/event-handlers'\nimport stringifyEvent from './stringify-event'\n\n/**\n * Constants\n */\n\nconst INTERVAL = 2000\n\n/**\n * Debug events function.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:batch-events')\n\n/**\n * A plugin that sends short easy to digest debug info about each event to\n * browser.\n *\n * @return {Object}\n */\n\nfunction DebugBatchEventsPlugin() {\n  /**\n   * When the batch started\n   *\n   * @type {Date}\n   */\n\n  let startDate = null\n\n  /**\n   * The timeoutId used to cancel the timeout\n   *\n   * @type {Any}\n   */\n\n  let timeoutId = null\n\n  /**\n   * An array of events not yet dumped with `debug`\n   *\n   * @type {Array}\n   */\n\n  const events = []\n\n  /**\n   * Send all events to debug\n   *\n   * Note: Formatted so it can easily be cut and pasted as text for analysis or\n   * documentation.\n   */\n\n  function dumpEvents() {\n    debug(`\\n${events.join('\\n')}`)\n    events.length = 0\n  }\n\n  /**\n   * Push an event on to the Array of events for debugging in a batch\n   *\n   * @param {Event} event\n   */\n\n  function pushEvent(event) {\n    if (events.length === 0) {\n      startDate = new Date()\n    }\n\n    const s = stringifyEvent(event)\n    const now = new Date()\n    events.push(`- ${now - startDate} - ${s}`)\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(dumpEvents, INTERVAL)\n  }\n\n  /**\n   * Plugin Object\n   *\n   * @type {Object}\n   */\n\n  const plugin = {}\n\n  for (const eventName of EVENT_HANDLERS) {\n    plugin[eventName] = function(event, editor, next) {\n      pushEvent(event)\n      next()\n    }\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default DebugBatchEventsPlugin\n","import Debug from 'debug'\n\n/**\n * Debug mutations function.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:mutations')\n\n/**\n * Properties on a MutationRecord\n *\n * @type {Object}\n */\n\nconst MUTATION_PROPERTIES = [\n  'type',\n  'oldValue',\n  'target',\n  'addedNodes',\n  'removedNodes',\n  'attributeName',\n  'attributeNamespace',\n  'nextSibling',\n  'previousSibling',\n]\n\n/**\n * Takes a DOM node and returns an easily readable version of it.\n *\n * @param {DOMNode} node\n */\n\nfunction normalizeNode(node) {\n  if (node.nodeType === window.Node.TEXT_NODE) {\n    return node.textContent\n  } else if (node.nodeType === window.Node.ELEMENT_NODE) {\n    const { outerHTML, innerHTML } = node\n    if (outerHTML == null) return JSON.stringify(node.textContent)\n    return outerHTML.slice(0, outerHTML.indexOf(innerHTML))\n  } else {\n    return `Node(type=${node.nodeType}`\n  }\n}\n\n/**\n * A plugin that sends short easy to digest debug info about each dom mutation\n * to browser.\n *\n * More information about mutations here:\n *\n * <https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver>\n * <https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord>\n *\n * @param {Object} options\n */\n\nfunction DebugMutationsPlugin() {\n  const observer = new window.MutationObserver(mutations => {\n    const array = Array.from(mutations).map(mutationRecord => {\n      const object = {}\n\n      // Only add properties that provide meaningful values to the object\n      // to make the debug info easier to read\n      MUTATION_PROPERTIES.forEach(key => {\n        let value = mutationRecord[key]\n        if (value == null) return\n\n        // Make NodeList easier to read\n        if (value instanceof window.NodeList) {\n          if (value.length === 0) return\n\n          object[key] = Array.from(value)\n            .map(normalizeNode)\n            .join(', ')\n          return\n        }\n\n        // Make Node easier to read\n        if (value instanceof window.Node) {\n          value = normalizeNode(value)\n        }\n\n        object[key] = value\n      })\n\n      return object\n    })\n\n    // The first argument must not be the array as `debug` renders the first\n    // argument in a different way than the rest\n    debug(`${array.length} Mutations`, ...array)\n  })\n\n  /**\n   * The previously observed DOM node\n   *\n   * @type {DOMNode}\n   */\n\n  let prevRootEl = null\n\n  /**\n   * Start observing the DOM node for mutations if it isn't being observed\n   */\n\n  function start(event, editor, next) {\n    const rootEl = editor.findDOMNode([])\n\n    if (rootEl === prevRootEl) return next()\n\n    debug('start')\n\n    observer.observe(rootEl, {\n      childList: true,\n      characterData: true,\n      attributes: true,\n      subtree: true,\n      characterDataOldValue: true,\n    })\n\n    prevRootEl = rootEl\n\n    next()\n  }\n\n  /**\n   * Stop observing the DOM node for mutations\n   */\n\n  function stop(event, editor, next) {\n    debug('stop')\n\n    observer.disconnect()\n    prevRootEl = null\n    next()\n  }\n\n  return {\n    onComponentDidMount: start,\n    onComponentDidUpdate: start,\n    onComponentWillUnmount: stop,\n  }\n}\n\nexport default DebugMutationsPlugin\n","import Debug from 'debug'\n\nimport { IS_ANDROID } from 'slate-dev-environment'\nimport PlaceholderPlugin from 'slate-react-placeholder'\nimport EditorPropsPlugin from './editor-props'\nimport RenderingPlugin from './rendering'\nimport CommandsPlugin from './commands'\nimport QueriesPlugin from './queries'\nimport DOMPlugin from '../dom'\nimport RestoreDOMPlugin from './restore-dom'\nimport DebugEventsPlugin from '../debug/debug-events'\nimport DebugBatchEventsPlugin from '../debug/debug-batch-events'\nimport DebugMutationsPlugin from '../debug/debug-mutations'\n\n/**\n * A plugin that adds the React-specific rendering logic to the editor.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction ReactPlugin(options = {}) {\n  const { placeholder = '' } = options\n  const debugEventsPlugin = Debug.enabled('slate:events')\n    ? DebugEventsPlugin(options)\n    : null\n  const debugBatchEventsPlugin = Debug.enabled('slate:batch-events')\n    ? DebugBatchEventsPlugin(options)\n    : null\n  const debugMutationsPlugin = Debug.enabled('slate:mutations')\n    ? DebugMutationsPlugin(options)\n    : null\n  const renderingPlugin = RenderingPlugin(options)\n  const commandsPlugin = CommandsPlugin(options)\n  const queriesPlugin = QueriesPlugin(options)\n  const editorPropsPlugin = EditorPropsPlugin(options)\n  const domPlugin = DOMPlugin(options)\n  const restoreDomPlugin = RestoreDOMPlugin()\n\n  // Disable placeholder for Android because it messes with reconciliation\n  // and doesn't disappear until composition is complete.\n  // e.g. In empty, type \"h\" and autocomplete on Android 9 and deletes all text.\n  const placeholderPlugin =\n    IS_ANDROID || placeholder === null\n      ? null\n      : PlaceholderPlugin({\n          placeholder,\n          when: (editor, node) =>\n            node.object === 'document' &&\n            node.text === '' &&\n            node.nodes.size === 1 &&\n            Array.from(node.texts()).length === 1,\n        })\n\n  return [\n    debugEventsPlugin,\n    debugBatchEventsPlugin,\n    debugMutationsPlugin,\n    editorPropsPlugin,\n    domPlugin,\n    restoreDomPlugin,\n    placeholderPlugin,\n    renderingPlugin,\n    commandsPlugin,\n    queriesPlugin,\n  ]\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default ReactPlugin\n","import Debug from 'debug'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\nimport invariant from 'tiny-invariant'\nimport memoizeOne from 'memoize-one'\nimport warning from 'tiny-warning'\nimport omit from 'lodash/omit'\nimport { Editor as Controller } from 'slate'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport OTHER_HANDLERS from '../constants/other-handlers'\nimport Content from './content'\nimport ReactPlugin from '../plugins/react'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:editor')\n\n/**\n * Editor.\n *\n * @type {Component}\n */\n\nclass Editor extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static __propTypes = {\n    autoCorrect: Types.bool,\n    autoFocus: Types.bool,\n    className: Types.string,\n    defaultValue: SlateTypes.value,\n    id: Types.string,\n    onChange: Types.func,\n    onContextMenu: Types.func,\n    options: Types.object,\n    placeholder: Types.any,\n    plugins: Types.array,\n    readOnly: Types.bool,\n    role: Types.string,\n    schema: Types.object,\n    spellCheck: Types.bool,\n    style: Types.object,\n    tabIndex: Types.number,\n    value: SlateTypes.value,\n    ...EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = Types.func\n      return obj\n    }, {}),\n    ...OTHER_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = Types.func\n      return obj\n    }, {}),\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    autoFocus: false,\n    autoCorrect: true,\n    onChange: () => {},\n    options: {},\n    placeholder: '',\n    plugins: [],\n    readOnly: false,\n    schema: {},\n    spellCheck: true,\n  }\n\n  /**\n   * Initial state.\n   *\n   * @type {Object}\n   */\n\n  state = { value: this.props.defaultValue, contentKey: 0 }\n\n  /**\n   * Temporary values.\n   *\n   * @type {Object}\n   */\n\n  tmp = {\n    mounted: false,\n    change: null,\n    resolves: 0,\n    updates: 0,\n    contentRef: React.createRef(),\n  }\n\n  /**\n   * When the component first mounts, flush a queued change if one exists.\n   */\n\n  componentDidMount() {\n    this.tmp.mounted = true\n    this.tmp.updates++\n\n    if (this.props.autoFocus) {\n      this.focus()\n    }\n\n    if (this.tmp.change) {\n      this.handleChange(this.tmp.change)\n      this.tmp.change = null\n    }\n  }\n\n  /**\n   * When the component updates, flush a queued change if one exists.\n   */\n\n  componentDidUpdate() {\n    this.tmp.updates++\n\n    if (this.tmp.change) {\n      this.handleChange(this.tmp.change)\n      this.tmp.change = null\n    }\n  }\n\n  /**\n   * When the component unmounts, make sure async commands don't trigger react updates.\n   */\n\n  componentWillUnmount() {\n    this.tmp.mounted = false\n  }\n\n  /**\n   * Render the editor.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    debug('render', this)\n\n    // Re-resolve the controller if needed based on memoized props.\n    const { commands, placeholder, plugins, queries, schema } = this.props\n\n    this.resolveController(\n      plugins,\n      schema,\n      commands,\n      queries,\n      placeholder,\n      ReactPlugin\n    )\n\n    // Set the current props on the controller.\n    const { options, readOnly, value: valueFromProps } = this.props\n    const { value: valueFromState } = this.state\n    const value = valueFromProps || valueFromState\n    const { contentKey } = this.state\n    this.controller.setReadOnly(readOnly)\n    this.controller.setValue(value, options)\n\n    const {\n      autoCorrect,\n      className,\n      id,\n      role,\n      spellCheck,\n      tabIndex,\n      style,\n      tagName,\n      onContextMenu,\n    } = this.props\n\n    const domProps = omit(this.props, Object.keys(Editor.__propTypes))\n\n    const children = (\n      <Content\n        {...domProps}\n        ref={this.tmp.contentRef}\n        autoCorrect={autoCorrect}\n        className={className}\n        contentKey={contentKey}\n        editor={this}\n        id={id}\n        onContextMenu={onContextMenu}\n        onEvent={(handler, event) => this.run(handler, event)}\n        readOnly={readOnly}\n        role={role}\n        spellCheck={spellCheck}\n        style={style}\n        tabIndex={tabIndex}\n        tagName={tagName}\n      />\n    )\n\n    // Render the editor's children with the controller.\n    const element = this.controller.run('renderEditor', {\n      ...this.props,\n      editor: this,\n      children,\n    })\n\n    return element\n  }\n\n  /**\n   * Resolve an editor controller from the passed-in props. This method takes\n   * all of the props as individual arguments to be able to properly memoize\n   * against anything that could change and invalidate the old editor.\n   *\n   * @param {Array} plugins\n   * @param {Object} schema\n   * @param {Object} commands\n   * @param {Object} queries\n   * @param {String} placeholder\n   * @return {Editor}\n   */\n\n  resolveController = memoizeOne(\n    (plugins = [], schema, commands, queries, placeholder, TheReactPlugin) => {\n      // If we've resolved a few times already, and it's exactly in line with\n      // the updates, then warn the user that they may be doing something wrong.\n      warning(\n        this.tmp.resolves < 5 || this.tmp.resolves !== this.tmp.updates,\n        'A Slate <Editor> component is re-resolving the `plugins`, `schema`, `commands`, `queries` or `placeholder` prop on each update, which leads to poor performance. This is often due to passing in a new references for these props with each render by declaring them inline in your render function. Do not do this! Declare them outside your render function, or memoize them instead.'\n      )\n\n      this.tmp.resolves++\n      const react = TheReactPlugin({\n        ...this.props,\n        editor: this,\n        value: this.props.value || this.state.value,\n      })\n\n      const onChange = change => {\n        if (this.tmp.mounted) {\n          this.handleChange(change)\n        } else {\n          this.tmp.change = change\n        }\n      }\n\n      this.controller = new Controller(\n        { plugins: [react], onChange },\n        { controller: this, construct: false }\n      )\n\n      this.controller.run('onConstruct')\n    }\n  )\n\n  handleChange(change) {\n    const { onChange } = this.props\n    const { value } = this.state\n\n    if (value) {\n      // Syncing value inside this component since parent does not want control of it (defaultValue was used)\n      this.setState({ value: change.value })\n    }\n\n    onChange(change)\n  }\n\n  /**\n   * Mimic the API of the `Editor` controller, so that this component instance\n   * can be passed in its place to plugins.\n   */\n\n  get operations() {\n    return this.controller.operations\n  }\n\n  get readOnly() {\n    return this.controller.readOnly\n  }\n\n  get value() {\n    return this.controller.value\n  }\n\n  applyOperation(...args) {\n    return this.controller.applyOperation(...args)\n  }\n\n  command(...args) {\n    return this.controller.command(...args)\n  }\n\n  hasCommand(...args) {\n    return this.controller.hasCommand(...args)\n  }\n\n  hasQuery(...args) {\n    return this.controller.hasQuery(...args)\n  }\n\n  normalize(...args) {\n    return this.controller.normalize(...args)\n  }\n\n  query(...args) {\n    return this.controller.query(...args)\n  }\n\n  registerCommand(...args) {\n    return this.controller.registerCommand(...args)\n  }\n\n  registerQuery(...args) {\n    return this.controller.registerQuery(...args)\n  }\n\n  run(...args) {\n    return this.controller.run(...args)\n  }\n\n  withoutNormalizing(...args) {\n    return this.controller.withoutNormalizing(...args)\n  }\n\n  /**\n   * Deprecated.\n   */\n\n  get editor() {\n    return this.controller.editor\n  }\n\n  get schema() {\n    invariant(\n      false,\n      'As of Slate 0.42, the `editor.schema` property no longer exists, and its functionality has been folded into the editor itself. Use the `editor` instead.'\n    )\n  }\n\n  get stack() {\n    invariant(\n      false,\n      'As of Slate 0.42, the `editor.stack` property no longer exists, and its functionality has been folded into the editor itself. Use the `editor` instead.'\n    )\n  }\n\n  call(...args) {\n    return this.controller.call(...args)\n  }\n\n  change(...args) {\n    return this.controller.change(...args)\n  }\n\n  onChange(...args) {\n    return this.controller.onChange(...args)\n  }\n\n  applyOperations(...args) {\n    return this.controller.applyOperations(...args)\n  }\n\n  setOperationFlag(...args) {\n    return this.controller.setOperationFlag(...args)\n  }\n\n  getFlag(...args) {\n    return this.controller.getFlag(...args)\n  }\n\n  unsetOperationFlag(...args) {\n    return this.controller.unsetOperationFlag(...args)\n  }\n\n  withoutNormalization(...args) {\n    return this.controller.withoutNormalization(...args)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Editor\n","import findDOMNode from './find-dom-node'\nimport warning from 'tiny-warning'\n\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\n/**\n * Find a native DOM selection point from a Slate `point`.\n *\n * @param {Point} point\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMPoint(point, win = window) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findDOMPoint(point)` helper is deprecated in favor of `editor.findDOMPoint(point)`.'\n  )\n\n  const el = findDOMNode(point.key, win)\n  let start = 0\n\n  // For each leaf, we need to isolate its content, which means filtering to its\n  // direct text and zero-width spans. (We have to filter out any other siblings\n  // that may have been rendered alongside them.)\n  const texts = Array.from(\n    el.querySelectorAll(`${SELECTORS.STRING}, ${SELECTORS.ZERO_WIDTH}`)\n  )\n\n  for (const text of texts) {\n    const node = text.childNodes[0]\n    const domLength = node.textContent.length\n    let slateLength = domLength\n\n    if (text.hasAttribute(DATA_ATTRS.LENGTH)) {\n      slateLength = parseInt(text.getAttribute(DATA_ATTRS.LENGTH), 10)\n    }\n\n    const end = start + slateLength\n\n    if (point.offset <= end) {\n      const offset = Math.min(domLength, Math.max(0, point.offset - start))\n      return { node, offset }\n    }\n\n    start = end\n  }\n\n  return null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMPoint\n","import findDOMPoint from './find-dom-point'\nimport warning from 'tiny-warning'\n\n/**\n * Find a native DOM range Slate `range`.\n *\n * @param {Range} range\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMRange(range, win = window) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findDOMRange(range)` helper is deprecated in favor of `editor.findDOMRange(range)`.'\n  )\n\n  const { anchor, focus, isBackward, isCollapsed } = range\n  const domAnchor = findDOMPoint(anchor, win)\n  const domFocus = isCollapsed ? domAnchor : findDOMPoint(focus, win)\n\n  if (!domAnchor || !domFocus) return null\n\n  const r = win.document.createRange()\n  const start = isBackward ? domFocus : domAnchor\n  const end = isBackward ? domAnchor : domFocus\n  r.setStart(start.node, start.offset)\n  r.setEnd(end.node, end.offset)\n  return r\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMRange\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\n/**\n * Find a Slate node from a DOM `element`.\n *\n * @param {Element} element\n * @param {Editor} editor\n * @return {Node|Null}\n */\n\nfunction findNode(element, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findNode(element)` helper is deprecated in favor of `editor.findNode(element)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findNode` utility takes an `editor` instead of a `value`.'\n  )\n\n  const closest = element.closest(SELECTORS.KEY)\n  if (!closest) return null\n\n  const key = closest.getAttribute(DATA_ATTRS.KEY)\n  if (!key) return null\n\n  const { value } = editor\n  const { document } = value\n  const node = document.getNode(key)\n  return node || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findNode\n","import findNode from './find-node'\nimport warning from 'tiny-warning'\n\n/**\n * Find a Slate path from a DOM `element`.\n *\n * @param {Element} element\n * @param {Editor} editor\n * @return {List|Null}\n */\n\nfunction findPath(element, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findPath(element)` helper is deprecated in favor of `editor.findPath(element)`.'\n  )\n\n  const node = findNode(element, editor)\n\n  if (!node) {\n    return null\n  }\n\n  const { value } = editor\n  const { document } = value\n  const path = document.getPath(node)\n  return path\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPath\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport OffsetKey from './offset-key'\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\n/**\n * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n *\n * @param {Element} nativeNode\n * @param {Number} nativeOffset\n * @param {Editor} editor\n * @return {Point}\n */\n\nfunction findPoint(nativeNode, nativeOffset, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findPoint(node, offset)` helper is deprecated in favor of `editor.findPoint(node, offset)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findPoint` utility takes an `editor` instead of a `value`.'\n  )\n\n  const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n    nativeNode,\n    nativeOffset\n  )\n\n  const { parentNode } = nearestNode\n  let rangeNode = parentNode.closest(SELECTORS.LEAF)\n  let offset\n  let node\n\n  // Calculate how far into the text node the `nearestNode` is, so that we can\n  // determine what the offset relative to the text node is.\n  if (rangeNode) {\n    const range = editor.ownerWindow.document.createRange()\n    const textNode = rangeNode.closest(SELECTORS.TEXT)\n    range.setStart(textNode, 0)\n    range.setEnd(nearestNode, nearestOffset)\n    node = textNode\n\n    // COMPAT: Edge has a bug where Range.prototype.toString() will convert \\n\n    // into \\r\\n. The bug causes a loop when slate-react attempts to reposition\n    // its cursor to match the native position. Use textContent.length instead.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n    const fragment = range.cloneContents()\n    const zeroWidthNodes = fragment.querySelectorAll(\n      `[${DATA_ATTRS.ZERO_WIDTH}]`\n    )\n    offset = fragment.textContent.length - zeroWidthNodes.length\n  } else {\n    // For void nodes, the element with the offset key will be a cousin, not an\n    // ancestor, so find it by going down from the nearest void parent.\n    const voidNode = parentNode.closest(SELECTORS.VOID)\n    if (!voidNode) return null\n    rangeNode = voidNode.querySelector(SELECTORS.LEAF)\n    if (!rangeNode) return null\n    node = rangeNode\n    offset = node.textContent.length\n  }\n\n  // COMPAT: If the parent node is a Slate zero-width space, this is because the\n  // text node should have no characters. However, during IME composition the\n  // ASCII characters will be prepended to the zero-width space, so subtract 1\n  // from the offset to account for the zero-width space character.\n  if (\n    offset === node.textContent.length &&\n    parentNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)\n  ) {\n    offset--\n  }\n\n  // Get the string value of the offset key attribute.\n  const offsetKey = rangeNode.getAttribute(DATA_ATTRS.OFFSET_KEY)\n  if (!offsetKey) return null\n\n  const { key } = OffsetKey.parse(offsetKey)\n\n  // COMPAT: If someone is clicking from one Slate editor into another, the\n  // select event fires twice, once for the old editor's `element` first, and\n  // then afterwards for the correct `element`. (2017/03/03)\n  const { value } = editor\n  if (!value.document.hasDescendant(key)) return null\n\n  const point = value.document.createPoint({ key, offset })\n  return point\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType === 1 && node.childNodes.length) {\n    const isLast = offset === node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType === 1 && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType === 8 ||\n    (child.nodeType === 1 && child.childNodes.length === 0) ||\n    (child.nodeType === 1 && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction === 'forward') i++\n    if (direction === 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPoint\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport findPoint from './find-point'\n\n/**\n * Find a Slate range from a DOM `native` selection.\n *\n * @param {Selection} native\n * @param {Editor} editor\n * @return {Range}\n */\n\nfunction findRange(native, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findRange(selection)` helper is deprecated in favor of `editor.findRange(selection)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findNode` utility takes an `editor` instead of a `value`.'\n  )\n\n  const el = native.anchorNode || native.startContainer\n  if (!el) return null\n\n  // If the `native` object is a DOM `Range` or `StaticRange` object, change it\n  // into something that looks like a DOM `Selection` instead.\n  if (\n    native instanceof editor.ownerWindow.Range ||\n    (editor.ownerWindow.StaticRange && native instanceof editor.ownerWindow.StaticRange)\n  ) {\n    native = {\n      anchorNode: native.startContainer,\n      anchorOffset: native.startOffset,\n      focusNode: native.endContainer,\n      focusOffset: native.endOffset,\n    }\n  }\n\n  const {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n    isCollapsed,\n  } = native\n  const { value } = editor\n  const anchor = findPoint(anchorNode, anchorOffset, editor)\n  const focus = isCollapsed ? anchor : findPoint(focusNode, focusOffset, editor)\n  if (!anchor || !focus) return null\n\n  const { document } = value\n  const range = document.createRange({\n    anchor,\n    focus,\n  })\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findRange\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport findPath from './find-path'\nimport findRange from './find-range'\n\n/**\n * Get the target range from a DOM `event`.\n *\n * @param {Event} event\n * @param {Editor} editor\n * @return {Range}\n */\n\nfunction getEventRange(event, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `getEventRange(event, editor)` helper is deprecated in favor of `editor.findEventRange(event)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findNode` utility takes an `editor` instead of a `value`.'\n  )\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const { clientX: x, clientY: y, target } = event\n  if (x == null || y == null) return null\n\n  const { value } = editor\n  const { document } = value\n  const path = findPath(event.target, editor)\n  if (!path) return null\n\n  const node = document.getNode(path)\n\n  // If the drop target is inside a void node, move it into either the next or\n  // previous node, depending on which side the `x` and `y` coordinates are\n  // closest to.\n  if (editor.isVoid(node)) {\n    const rect = target.getBoundingClientRect()\n    const isPrevious =\n      node.object === 'inline'\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n    const range = document.createRange()\n    const move = isPrevious ? 'moveToEndOfNode' : 'moveToStartOfNode'\n    const entry = document[isPrevious ? 'getPreviousText' : 'getNextText'](path)\n\n    if (entry) {\n      return range[move](entry)\n    }\n\n    return null\n  }\n\n  // Else resolve a range from the caret position where the drop occured.\n  const doc = editor.ownerWindow.document\n  let native\n\n  // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n  if (doc.caretRangeFromPoint) {\n    native = doc.caretRangeFromPoint(x, y)\n  } else if (doc.caretPositionFromPoint) {\n    const position = doc.caretPositionFromPoint(x, y)\n    native = doc.createRange()\n    native.setStart(position.offsetNode, position.offset)\n    native.setEnd(position.offsetNode, position.offset)\n  } else if (doc.body.createTextRange) {\n    // COMPAT: In IE, `caretRangeFromPoint` and\n    // `caretPositionFromPoint` don't exist. (2018/07/11)\n    native = doc.body.createTextRange()\n\n    try {\n      native.moveToPoint(x, y)\n    } catch (error) {\n      // IE11 will raise an `unspecified error` if `moveToPoint` is\n      // called during a dropEvent.\n      return null\n    }\n  }\n\n  // Resolve a Slate range from the DOM range.\n  const range = findRange(native, editor)\n  if (!range) return null\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventRange\n","import Editor from './components/editor'\nimport cloneFragment from './utils/clone-fragment'\nimport findDOMNode from './utils/find-dom-node'\nimport findDOMPoint from './utils/find-dom-point'\nimport findDOMRange from './utils/find-dom-range'\nimport findNode from './utils/find-node'\nimport findPath from './utils/find-path'\nimport findPoint from './utils/find-point'\nimport findRange from './utils/find-range'\nimport getEventRange from './utils/get-event-range'\nimport getEventTransfer from './utils/get-event-transfer'\nimport setEventTransfer from './utils/set-event-transfer'\nimport ReactPlugin from './plugins/react'\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMPoint,\n  findDOMRange,\n  findNode,\n  findPath,\n  findPoint,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  ReactPlugin,\n}\n\nexport default {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMPoint,\n  findDOMRange,\n  findNode,\n  findPath,\n  findPoint,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  ReactPlugin,\n}\n"],"names":["EVENT_HANDLERS","OTHER_HANDLERS","DATA_ATTRS","OBJECT","EDITOR","KEY","LEAF","STRING","VOID","ZERO_WIDTH","PARSER","parse","string","matches","exec","Error","original","key","index","parseInt","stringify","object","Leaf","props","ref","React","createRef","forceUpdateFlag","nextProps","isZeroWidth","text","domNode","current","domTextContent","textContent","reactTextContent","oldDecorations","decorations","map","d","type","join","newDecorations","replace","isOnly","parent","nodes","size","leaves","length","isLineBreak","shouldHaveLineBreak","IS_FIREFOX","hasAttribute","removeAttribute","LENGTH","setAttribute","childNodes","child","tagName","removeChild","hasLineBreak","appendChild","window","document","createElement","node","offset","editor","offsetKey","OffsetKey","attrs","OFFSET_KEY","children","decoration","ret","run","Component","Text","forwardRef","style","getLeaves","at","leaf","Inline","tmp","nodeRefs","getDecorations","first","i","refFn","push","decs","getRelativeRange","filter","attributes","Block","isLeafBlock","direction","getTextDirection","dir","range","isUnset","get","start","end","startPath","path","endPath","startIndex","endIndex","setPath","rest","moveTo","PathUtils","create","setKey","texts","firstNode","firstPath","last","lastNode","lastPath","setAnchor","setFocus","Document","OVERFLOWS","IS_IOS_11","IS_IOS","navigator","userAgent","match","findScrollContainer","el","parentNode","scroller","getComputedStyle","overflowY","includes","body","scrollToSelection","selection","anchorNode","getWindow","isWindow","documentElement","backward","isBackward","getRangeAt","cloneRange","collapse","cursorRect","getBoundingClientRect","IS_SAFARI","collapsed","top","height","startOffset","setEnd","endContainer","setStart","startContainer","getClientRects","width","yOffset","xOffset","scrollerTop","scrollerLeft","scrollerBordersY","scrollerBordersX","scrollerPaddingTop","scrollerPaddingBottom","scrollerPaddingLeft","scrollerPaddingRight","innerWidth","innerHeight","pageYOffset","pageXOffset","offsetWidth","offsetHeight","scrollTop","scrollLeft","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","scrollerRect","left","cursorTop","cursorLeft","x","y","scrollTo","removeAllRanges","domSelection","IS_IE","createTextRange","select","FIREFOX_NODE_TYPE_ACCESS_ERROR","debug","Debug","update","Content","setRef","domRef","ownerWindow","handlers","reduce","obj","handler","onEvent","event","updateSelection","isComposing","HAS_INPUT_EVENTS_LEVEL_2","value","native","getSelection","activeElement","enabled","toJSON","rangeCount","updated","isBlurred","blur","propsToCompare","selectionsEqual","prop","nativeSelection","isInEditor","isFocused","focus","preventScroll","isSet","safelyFindDOMRange","endOffset","isUpdatingSelection","setBaseAndExtent","addRange","userActionPerformed","anchorOffset","focusOffset","target","nodeType","err","test","message","isContentEditable","closest","SELECTORS","onNativeSelectionChange","throttle","readOnly","focusNode","isCollapsed","error","info","setState","addEventListener","onBeforeInput","removeEventListener","clearUserActionPerformed","nativeEvent","isUndoRedo","Hotkeys","isUndo","isRedo","IS_ANDROID","findRange","equals","toRange","id","className","tabIndex","role","spellCheck","onContextMenu","Container","WebkitUserModify","contentKey","data","domProps","omit","Object","keys","__propTypes","autoCorrect","undefined","nodeRef","Types","bool","isRequired","number","func","defaultProps","findDOMRange","e","PROPS","EditorPropsPlugin","options","plugin","memo","Rendering","position","safelyGetParentKeyNode","parentElement","sanitizeDomOnError","fn","failed","warn","domElement","getAttribute","slateNode","getNode","blockNode","getClosestBlock","lineIndex","indexOf","ownerDocument","defaultView","log","replaceNodeByKey","newNode","textNode","point","Range","anchor","reconcileNode","getPath","findDOMNode","block","domText","isLastNode","lastChar","charAt","slice","entire","moveAnchorTo","moveFocusTo","resolveRange","insertTextAtRange","marks","reconcileDOMNode","findNode","CommandsPlugin","QueriesPlugin","content","contentRef","search","instance","p","findDOMPoint","Array","from","querySelectorAll","domLength","slateLength","Math","min","max","domAnchor","domFocus","r","createRange","element","findPath","findEventRange","clientX","clientY","isVoid","rect","isPrevious","move","entry","doc","caretRangeFromPoint","caretPositionFromPoint","offsetNode","moveToPoint","nodeElement","docPath","n","findPoint","nativeNode","nativeOffset","normalizeNodeAndOffset","nearestNode","nearestOffset","leafNode","TEXT","contents","cloneContents","zeroWidths","forEach","voidNode","querySelector","createPoint","domRange","StaticRange","findSelection","anchorText","focusText","anchorInline","getClosestInline","focusInline","focusBlock","anchorBlock","setOffset","depth","getDepth","relativePath","drop","next","nextPath","absolutePath","concat","createSelection","setIsFocused","set","isFirst","getEditableChild","triedForward","triedBackward","FRAGMENT","TRANSFER_TYPES","HTML","cloneFragment","callback","Value","isValue","fragment","startVoid","getClosestVoid","endVoid","encoded","Base64","serializeNode","attach","trim","setEndAfter","firstChild","call","isNewline","zw","span","whiteSpace","valFromSelection","plainText","Plain","serialize","div","clipboardData","setData","preventDefault","innerHTML","editorEl","selectAllChildren","requestAnimationFrame","NODE","RICH","FRAGMENT_MATCHER","getEventTransfer","transfer","dataTransfer","getType","html","rich","files","full","embeddedTypes","getEmbeddedTypes","deserializeNode","items","item","kind","getAsFile","exists","getTransferType","prefix","substring","JSON","types","getData","setEventTransfer","mime","toUpperCase","AfterPlugin","isDraggingInternally","isMouseDown","getTargetRanges","targetRange","inputType","deleteAtRange","deleteWordBackwardAtRange","deleteWordForwardAtRange","deleteLineBackwardAtRange","deleteLineForwardAtRange","hasVoidParent","moveToStartOfNextText","splitBlockAtRange","onBlur","onClick","ancestors","getAncestors","some","a","moveToEndOfNode","onCopy","onCut","voidPath","removeNodeByKey","delete","onDragEnd","onDragStart","selectionIncludesNode","blocks","moveToRangeOfNode","onDrop","dispatchEvent","MouseEvent","draggedRange","nxt","moveToStartOfNode","split","line","splitBlock","insertText","insertFragment","onFocus","IS_EDGE","deselect","onInput","ENABLE_SLATE_LOGGING","console","onKeyDown","selectedBlock","isRtl","isDeleteBackward","deleteCharBackward","isDeleteForward","deleteCharForward","isDeleteLineBackward","deleteLineBackward","isDeleteLineForward","deleteLineForward","isDeleteWordBackward","deleteWordBackward","isDeleteWordForward","deleteWordForward","redo","undo","isMoveLineBackward","moveToEndOfBlock","moveToStartOfBlock","isMoveLineForward","isExtendLineBackward","moveFocusToEndOfBlock","moveFocusToStartOfBlock","isExtendLineForward","isMoveBackward","moveToEnd","moveToStart","moveForward","moveBackward","isMoveForward","isMoveWordBackward","moveWordForward","moveWordBackward","isMoveWordForward","isExtendBackward","isExtendForward","moveFocusBackward","moveFocusForward","onMouseDown","onMouseUp","onPaste","startBlock","defaultBlock","defaultMarks","getInsertMarksAtRange","frag","deserialize","onSelect","win","Node","isNode","BeforePlugin","isCopying","isDragging","isUserActionPerformed","nextNativeOperation","currentlySelectedCompositionNode","ensureSelection","checkIsComposing","isSynthetic","inputText","hasNewLines","chunks","relatedTarget","SPACER","contains","onCompositionEnd","onCompositionUpdate","onCompositionStart","onDragEnter","onDragExit","onDragLeave","onDragOver","dropEffect","syncDomToSlateAst","ctrlKey","altKey","shiftKey","metaKey","which","isCompose","toLowerCase","isBold","isItalic","isTransposeCharacter","nodesToIncorporate","currentOffset","syncNodeToSlateAst","syncSelection","slateDomSpan","findDomNode","slateAstNode","newTextContent","newSelectionPosition","syncTextToAst","newText","oldText","numStartingCharsSame","commonCharactersAtStart","numEndingCharsSame","commonCharactersAtEnd","insertions","controller","fastInsertText","right","leftLength","rightLength","setSlateSelection","setDomSelection","sanitizeZeroWidthSpaces","allChildTextNodes","stringNode","isStringNode","hasZeroWidthChars","removeZeroWidths","pos","deleteData","eachTextNode","cb","saveCurrentNativeNode","saveCurrentlySelectedCompositionNode","addCurrentlySelectedKeyNode","keyNodes","currentSpan","DOMPlugin","plugins","RestoreDOMPlugin","restoreDOM","stringifyEvent","DebugEventsPlugin","eventName","s","INTERVAL","DebugBatchEventsPlugin","startDate","timeoutId","events","dumpEvents","pushEvent","Date","now","setTimeout","MUTATION_PROPERTIES","normalizeNode","TEXT_NODE","ELEMENT_NODE","outerHTML","DebugMutationsPlugin","observer","MutationObserver","array","mutations","mutationRecord","NodeList","prevRootEl","rootEl","observe","stop","disconnect","ReactPlugin","placeholder","debugEventsPlugin","debugBatchEventsPlugin","debugMutationsPlugin","renderingPlugin","RenderingPlugin","commandsPlugin","queriesPlugin","editorPropsPlugin","domPlugin","restoreDomPlugin","placeholderPlugin","PlaceholderPlugin","Editor","state","defaultValue","resolveController","memoizeOne","TheReactPlugin","resolves","updates","react","onChange","mounted","handleChange","change","Controller","construct","autoFocus","commands","queries","schema","valueFromProps","valueFromState","setReadOnly","setValue","applyOperation","command","hasCommand","hasQuery","normalize","query","registerCommand","registerQuery","withoutNormalizing","applyOperations","setOperationFlag","getFlag","unsetOperationFlag","withoutNormalization","operations","SlateTypes","any","rangeNode","zeroWidthNodes","hasDescendant","isLast","getEventRange"],"mappings":"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"}